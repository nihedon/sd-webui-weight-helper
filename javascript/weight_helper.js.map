{
  "version": 3,
  "sources": ["../react/src/shared/types/lora-types.ts", "../react/src/shared/constants/common-const.ts", "../react/src/shared/manager/config-manager.ts", "../react/src/shared/manager/history-manager.ts", "../react/src/shared/manager/cache-manager.ts", "../react/src/shared/state/current-state.ts", "../react/src/shared/utils/common-utils.ts", "../react/src/shared/utils/helper-utils.ts", "../react/src/shared/utils/editor-utils.ts", "../react/src/shared/utils/state-utils.ts", "../react/node_modules/preact/src/constants.js", "../react/node_modules/preact/src/util.js", "../react/node_modules/preact/src/options.js", "../react/node_modules/preact/src/create-element.js", "../react/node_modules/preact/src/component.js", "../react/node_modules/preact/src/diff/props.js", "../react/node_modules/preact/src/create-context.js", "../react/node_modules/preact/src/diff/children.js", "../react/node_modules/preact/src/diff/index.js", "../react/node_modules/preact/src/render.js", "../react/node_modules/preact/src/clone-element.js", "../react/node_modules/preact/src/diff/catch-error.js", "../react/node_modules/preact/hooks/src/index.js", "../react/node_modules/preact/compat/src/util.js", "../react/node_modules/preact/compat/src/hooks.js", "../react/node_modules/preact/compat/src/PureComponent.js", "../react/node_modules/preact/compat/src/memo.js", "../react/node_modules/preact/compat/src/forwardRef.js", "../react/node_modules/preact/compat/src/Children.js", "../react/node_modules/preact/compat/src/suspense.js", "../react/node_modules/preact/compat/src/suspense-list.js", "../react/node_modules/preact/src/constants.js", "../react/node_modules/preact/compat/src/portals.js", "../react/node_modules/preact/compat/src/render.js", "../react/node_modules/preact/compat/src/index.js", "../react/src/shared/manager/api-manager.ts", "../react/src/shared/utils/api-utils.ts", "../react/src/shared/utils/weight-utils.ts", "../react/src/components/sections/common-section.tsx", "../react/src/components/sections/header-section.tsx", "../react/src/components/sections/lbw-section.tsx", "../react/src/components/sections/lora-settings-section.tsx", "../react/src/components/sections/metadata-section.tsx", "../react/src/components/sections/preview-section.tsx", "../react/src/components/main-component.tsx", "../react/src/components/contexts/weight-helper-context.tsx", "../react/src/index.ts"],
  "sourcesContent": ["export const NamespaceTypes = {\n    lora: 'lora',\n    lyco: 'lyco',\n} as const;\nexport type NamespaceTypes = (typeof NamespaceTypes)[keyof typeof NamespaceTypes];\n\nexport const LoraBlockTypes = {\n    lora: 'lora',\n    lycoris: 'lycoris',\n    Unknown: 'Unknown',\n} as const;\nexport type LoraBlockTypes = (typeof LoraBlockTypes)[keyof typeof LoraBlockTypes];\n\nexport const ModelTypes = {\n    SD: 'SD',\n    SDXL: 'SDXL',\n    Flux: 'Flux',\n    Unknown: 'Unknown',\n} as const;\nexport type ModelTypes = (typeof ModelTypes)[keyof typeof ModelTypes];\n\nexport const LoraDefineParams = {\n    te: 'te',\n    unet: 'unet',\n    start: 'start',\n    stop: 'stop',\n    step: 'step',\n    lbw: 'lbw',\n    lbwe: 'lbwe',\n} as const;\nexport type LoraDefineParams = (typeof LoraDefineParams)[keyof typeof LoraDefineParams];\n\nexport const WeightControllerTypes = {\n    TENC: 'TEnc',\n    UNET: 'UNet',\n    START: 'Start',\n    STOP: 'Stop',\n    LBW: 'LBW',\n} as const;\nexport type WeightControllerTypes = (typeof WeightControllerTypes)[keyof typeof WeightControllerTypes];\n", "import { LoraBlockTypes, ModelTypes } from '@/shared/types/lora-types';\n\nconst BASE_MODEL_TYPE = {\n    STABLE_DIFFUSION: [\n        'BASE',\n        'IN00',\n        'IN01',\n        'IN02',\n        'IN03',\n        'IN04',\n        'IN05',\n        'IN06',\n        'IN07',\n        'IN08',\n        'IN09',\n        'IN10',\n        'IN11',\n        'M00',\n        'OUT00',\n        'OUT01',\n        'OUT02',\n        'OUT03',\n        'OUT04',\n        'OUT05',\n        'OUT06',\n        'OUT07',\n        'OUT08',\n        'OUT09',\n        'OUT10',\n        'OUT11',\n    ],\n    BLACK_FOREST_LABS: [\n        'CLIP',\n        'T5',\n        'IN',\n        'D00',\n        'D01',\n        'D02',\n        'D03',\n        'D04',\n        'D05',\n        'D06',\n        'D07',\n        'D08',\n        'D09',\n        'D10',\n        'D11',\n        'D12',\n        'D13',\n        'D14',\n        'D15',\n        'D16',\n        'D17',\n        'D18',\n        'S00',\n        'S01',\n        'S02',\n        'S03',\n        'S04',\n        'S05',\n        'S06',\n        'S07',\n        'S08',\n        'S09',\n        'S10',\n        'S11',\n        'S12',\n        'S13',\n        'S14',\n        'S15',\n        'S16',\n        'S17',\n        'S18',\n        'S19',\n        'S20',\n        'S21',\n        'S22',\n        'S23',\n        'S24',\n        'S25',\n        'S26',\n        'S27',\n        'S28',\n        'S29',\n        'S30',\n        'S31',\n        'S32',\n        'S33',\n        'S34',\n        'S35',\n        'S36',\n        'S37',\n        'OUT',\n    ],\n};\n\nexport const LBW_BLOCKS = {\n    [ModelTypes.SD]: BASE_MODEL_TYPE.STABLE_DIFFUSION,\n    [ModelTypes.SDXL]: BASE_MODEL_TYPE.STABLE_DIFFUSION,\n    [ModelTypes.Flux]: BASE_MODEL_TYPE.BLACK_FOREST_LABS,\n    [ModelTypes.Unknown]: [],\n};\n\nexport const lbwMaskDefine = {\n    [ModelTypes.SD]: {\n        [LoraBlockTypes.lora]: [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n        [LoraBlockTypes.lycoris]: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n        [LoraBlockTypes.Unknown]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    },\n    [ModelTypes.SDXL]: {\n        [LoraBlockTypes.lora]: [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\n        [LoraBlockTypes.lycoris]: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n        [LoraBlockTypes.Unknown]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    },\n    [ModelTypes.Flux]: {\n        [LoraBlockTypes.lora]: [\n            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        ],\n        [LoraBlockTypes.lycoris]: [\n            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        ],\n        [LoraBlockTypes.Unknown]: [\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        ],\n    },\n    [ModelTypes.Unknown]: {\n        [LoraBlockTypes.lora]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [LoraBlockTypes.lycoris]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [LoraBlockTypes.Unknown]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    },\n};\n\nexport const XYZ_PRESETS = {\n    [ModelTypes.SD]: {\n        [LoraBlockTypes.lora]: 'XYZ(17)',\n        [LoraBlockTypes.lycoris]: 'XYZ(26)',\n        [LoraBlockTypes.Unknown]: 'XYZ(26)',\n    },\n    [ModelTypes.SDXL]: {\n        [LoraBlockTypes.lora]: 'XYZ(12)',\n        [LoraBlockTypes.lycoris]: 'XYZ(20)',\n        [LoraBlockTypes.Unknown]: 'XYZ(26)',\n    },\n    [ModelTypes.Flux]: {\n        [LoraBlockTypes.lora]: 'XYZ(19)',\n        [LoraBlockTypes.lycoris]: 'XYZ(19)',\n        [LoraBlockTypes.Unknown]: 'XYZ(19)',\n    },\n    [ModelTypes.Unknown]: {\n        [LoraBlockTypes.lora]: 'XYZ(17)',\n        [LoraBlockTypes.lycoris]: 'XYZ(26)',\n        [LoraBlockTypes.Unknown]: 'XYZ(26)',\n    },\n};\n\nexport const SELECTABLE_MODEL_TYPES = {\n    '': ModelTypes.Unknown,\n    SD: ModelTypes.SD,\n    SDXL: ModelTypes.SDXL,\n    Flux: ModelTypes.Flux,\n};\n\nexport const SELECTABLE_LORA_BLOCK_TYPES = {\n    '': LoraBlockTypes.Unknown,\n    'LoRA(LierLa)': LoraBlockTypes.lora,\n    'LyCORIS,etc': LoraBlockTypes.lycoris,\n};\n\nexport const CARD_NO_IMAGE_PATH = './file=html/card-no-preview.png';\n", "import {\n    LBW_BLOCKS,\n    lbwMaskDefine as LBW_MASK_DEFINE,\n    SELECTABLE_LORA_BLOCK_TYPES,\n    SELECTABLE_MODEL_TYPES,\n    XYZ_PRESETS,\n} from '@/shared/constants/common-const';\nimport { LoraBlockTypes, ModelTypes, WeightControllerTypes } from '@/shared/types/lora-types';\n\ninterface WeightControllerInterface {\n    min: number;\n    max: number;\n    default: number;\n    step: number;\n}\n\nconst WeightControllerConfig: Record<string, WeightControllerInterface> = {\n    [WeightControllerTypes.TENC]: {\n        min: 0,\n        max: 0,\n        default: 1,\n        step: 0.5,\n    },\n    [WeightControllerTypes.UNET]: {\n        min: 0,\n        max: 0,\n        default: 0,\n        step: 0.5,\n    },\n    [WeightControllerTypes.START]: {\n        min: 0,\n        max: 0,\n        default: 0,\n        step: 1,\n    },\n    [WeightControllerTypes.STOP]: {\n        min: 0,\n        max: 0,\n        default: 0,\n        step: 1,\n    },\n    [WeightControllerTypes.LBW]: {\n        min: 0,\n        max: 0,\n        default: 1,\n        step: 0.5,\n    },\n};\n\nconst lbwGroupConfig = {\n    [ModelTypes.SD]: {\n        [LoraBlockTypes.lora]: [['BASE', 'IN01-IN04', 'IN05-IN08', 'M00', 'OUT03-OUT06', 'OUT07-OUT11']],\n        [LoraBlockTypes.lycoris]: [['BASE', 'IN00-IN05', 'IN06-IN11', 'M00', 'OUT00-OUT05', 'OUT06-OUT11']],\n        [LoraBlockTypes.Unknown]: [[]] as string[][],\n    },\n    [ModelTypes.SDXL]: {\n        [LoraBlockTypes.lora]: [['BASE', 'IN04-IN08', 'M00', 'OUT00-OUT05']],\n        [LoraBlockTypes.lycoris]: [['BASE', 'IN00-IN03', 'IN04-IN08', 'M00', 'OUT00-OUT03', 'OUT04-OUT08']],\n        [LoraBlockTypes.Unknown]: [[]] as string[][],\n    },\n    [ModelTypes.Flux]: {\n        [LoraBlockTypes.lora]: [['CLIP', 'T5', 'IN', 'OUT'], ['D00-D18'], ['S00-S18'], ['S19-S37']],\n        [LoraBlockTypes.lycoris]: [['CLIP', 'T5', 'IN', 'OUT'], ['D00-D18'], ['S00-S18'], ['S19-S37']],\n        [LoraBlockTypes.Unknown]: [[]] as string[][],\n    },\n    [ModelTypes.Unknown]: {\n        [LoraBlockTypes.lora]: [[]] as string[][],\n        [LoraBlockTypes.lycoris]: [[]] as string[][],\n        [LoraBlockTypes.Unknown]: [[]] as string[][],\n    },\n};\n\n/**\n * Initializes the configuration for block groups and weight controllers.\n * Updates configuration values with settings from window.opts.\n */\nexport function initialize() {\n    const optBlockPattern = /((BASE|MID|M00|CLIP|T5|(IN|OUT|D|S)[0-9]{2}(-(IN|OUT|D|S)[0-9]{2})?) *(, *|$))+/;\n    for (const modelType of Object.values(SELECTABLE_MODEL_TYPES)) {\n        if (modelType === ModelTypes.Unknown || modelType === ModelTypes.Flux) continue;\n        for (const loraBlockType of Object.values(SELECTABLE_LORA_BLOCK_TYPES)) {\n            if (loraBlockType === LoraBlockTypes.Unknown) continue;\n            try {\n                let optBlockPoints = window.opts[`weight_helper_LBW_${modelType}_${loraBlockType}_block_points`] as string;\n                optBlockPoints = optBlockPoints.replace('MID', 'M00');\n                if (optBlockPattern.exec(optBlockPoints)) {\n                    const blockPoints = optBlockPoints.split(',').map((v) => {\n                        return v.trim().replace(/\\d+/g, (match) => (match.length === 1 ? `0${match}` : match));\n                    });\n                    lbwGroupConfig[modelType][loraBlockType] = [blockPoints];\n                }\n            } catch (e) {\n                console.warn(`${modelType}_${loraBlockType} block definition format is invalid.`, e);\n            }\n        }\n    }\n\n    for (const k of [WeightControllerTypes.TENC, WeightControllerTypes.UNET, WeightControllerTypes.LBW]) {\n        WeightControllerConfig[k].min = +window.opts[`weight_helper_${k}_min`];\n        WeightControllerConfig[k].max = +window.opts[`weight_helper_${k}_max`];\n        WeightControllerConfig[k].step = +window.opts[`weight_helper_${k}_step`];\n    }\n}\n\n/**\n * Retrieves the configuration for a specific weight controller type.\n * @param type - The weight controller type.\n * @returns The configuration object for the specified controller type.\n */\nexport function getWeightControllerConfig(type: string): WeightControllerInterface {\n    return WeightControllerConfig[type];\n}\n\n/**\n * Returns the list of LBW blocks for the selected model type.\n * @param selectedModelType - The selected model type.\n * @returns An array of block labels for the given model type.\n */\nexport function getLbwBlocks(selectedModelType: ModelTypes): string[] {\n    if (selectedModelType in LBW_BLOCKS) {\n        return LBW_BLOCKS[selectedModelType];\n    }\n    return LBW_BLOCKS[ModelTypes.Unknown];\n}\n\n/**\n * Returns an array of enabled LBW block labels for the selected model and LoRA block type.\n * Only blocks with a mask value of 1 are included.\n * @param selectedModelType - The selected model type.\n * @param selectedLoraBlockType - The selected LoRA block type.\n * @returns An array of enabled block labels.\n */\nexport function getMaskedLbwBlocks(selectedModelType: ModelTypes, selectedLoraBlockType: LoraBlockTypes): string[] {\n    const masks = getLbwMasks(selectedModelType, selectedLoraBlockType);\n    return LBW_BLOCKS[selectedModelType || ModelTypes.Unknown].filter((_, i) => masks[i] === 1);\n}\n\n/**\n * Returns the mask array for LBW blocks for the selected model and block type.\n * Each value in the array (1 or 0) indicates whether the corresponding block is enabled.\n * @param selectedModelType - The selected model type.\n * @param selectedLoraBlockType - The selected LoRA block type.\n * @returns An array of binary values (1=enabled, 0=disabled).\n */\nexport function getLbwMasks(selectedModelType: ModelTypes, selectedLoraBlockType: LoraBlockTypes): number[] {\n    return LBW_MASK_DEFINE[selectedModelType || ModelTypes.Unknown][selectedLoraBlockType || LoraBlockTypes.Unknown];\n}\n\n/**\n * Returns the block groups configuration for the selected model and block type.\n * @param selectedModelType - The selected model type.\n * @param selectedLoraBlockType - The selected LoRA block type.\n * @returns An array of block group identifiers.\n */\nexport function getLbwBlockGroups(selectedModelType: ModelTypes, selectedLoraBlockType: LoraBlockTypes): string[][] {\n    return lbwGroupConfig[selectedModelType || ModelTypes.Unknown][selectedLoraBlockType || LoraBlockTypes.Unknown];\n}\n\n/**\n * Returns the XYZ label for the selected model and block type.\n * @param selectedModelType - The selected model type.\n * @param selectedLoraBlockType - The selected LoRA block type.\n * @returns The XYZ identifier string.\n */\nexport function getXyzLabel(selectedModelType: ModelTypes, selectedLoraBlockType: LoraBlockTypes): string {\n    return XYZ_PRESETS[selectedModelType || ModelTypes.Unknown][selectedLoraBlockType || LoraBlockTypes.Unknown];\n}\n", "import { LoraBlockTypes, ModelTypes } from '@/shared/types/lora-types';\n\nlet _historiesStore: Record<string, { loraParams: string; selectedLoraBlockType: LoraBlockTypes; selectedModelType: ModelTypes }[]> = {};\nconst _lockStore: Record<string, Set<string>> = {};\n\n/**\n * Retrieves the history list for the given LoRA name.\n * @param loraName - The name of the LoRA model.\n * @returns An array of history objects for the LoRA.\n */\nexport function getHistories(loraName: string): { loraParams: string; selectedLoraBlockType: LoraBlockTypes; selectedModelType: ModelTypes }[] {\n    return _historiesStore[loraName] ?? [];\n}\n\n/**\n * Adds a new history entry for the given LoRA name.\n * If a history with the same loraParams exists, it is replaced.\n * @param loraName - The name of the LoRA model.\n * @param history - The history object to add.\n */\nexport function addHistory(loraName: string, history: { loraParams: string; selectedLoraBlockType: LoraBlockTypes; selectedModelType: ModelTypes }) {\n    history = {\n        loraParams: history.loraParams,\n        selectedLoraBlockType: history.selectedLoraBlockType,\n        selectedModelType: history.selectedModelType,\n    };\n    if (loraName in _historiesStore) {\n        _historiesStore[loraName] = _historiesStore[loraName].filter((h) => h.loraParams !== history.loraParams);\n        _historiesStore[loraName].push(history);\n    } else {\n        _historiesStore[loraName] = [history];\n    }\n}\n\n/**\n * Clears all unlocked history entries for the given LoRA name.\n * Only locked histories are retained.\n * @param loraName - The name of the LoRA model.\n */\nexport function clearHistories(loraName: string) {\n    if (loraName in _historiesStore) {\n        const lockSet = _lockStore[loraName];\n        _historiesStore[loraName] = _historiesStore[loraName].filter((h) => lockSet && lockSet.has(h.loraParams));\n    }\n}\n\n/**\n * Adds a lock for the given LoRA name and loraParams.\n * @param loraName - The name of the LoRA model.\n * @param loraParams - The loraParams string to lock.\n */\nexport function addLock(loraName: string, loraParams: string) {\n    if (loraName in _lockStore) {\n        _lockStore[loraName].add(loraParams);\n    } else {\n        _lockStore[loraName] = new Set([loraParams]);\n    }\n}\n\n/**\n * Removes a lock for the given LoRA name and loraParams.\n * @param loraName - The name of the LoRA model.\n * @param loraParams - The loraParams string to unlock.\n */\nexport function removeLock(loraName: string, loraParams: string) {\n    if (loraName in _lockStore) {\n        _lockStore[loraName].delete(loraParams);\n    }\n}\n\n/**\n * Checks if the given loraParams is locked for the specified LoRA name.\n * @param loraName - The name of the LoRA model.\n * @param loraParams - The loraParams string to check.\n * @returns True if locked, false otherwise.\n */\nexport function isLocked(loraName: string, loraParams: string) {\n    if (loraName in _lockStore) {\n        return _lockStore[loraName].has(loraParams);\n    }\n    return false;\n}\n\n/**\n * Stores the histories and lock information to localStorage.\n */\nexport function storeLocalStorage() {\n    localStorage.setItem('wh://histories', JSON.stringify(_historiesStore));\n    const lockObj: Record<string, string[]> = {};\n    for (const key in _lockStore) {\n        lockObj[key] = Array.from(_lockStore[key]);\n    }\n    localStorage.setItem('wh://locks', JSON.stringify(lockObj));\n}\n\n/**\n * Loads the histories and lock information from localStorage.\n */\nexport function loadLocalStorage() {\n    const histories = localStorage.getItem('wh://histories');\n    if (histories) {\n        _historiesStore = JSON.parse(histories);\n    }\n    const locks = localStorage.getItem('wh://locks');\n    if (locks) {\n        const lockObj = JSON.parse(locks);\n        for (const key in lockObj) {\n            _lockStore[key] = new Set(lockObj[key]);\n        }\n    }\n}\n", "import { LoraBlockTypes, ModelTypes } from '@/shared/types/lora-types';\n\nimport * as context from '@/components/contexts/weight-helper-context';\n\nconst _metadataCacheStore: Record<\n    string,\n    {\n        metadataState: context.MetadataState | undefined;\n        selectedLoraBlockType: LoraBlockTypes;\n        selectedModelType: ModelTypes;\n        usingBlocks: Set<string> | undefined;\n    }\n> = {};\n\nconst _previewCacheStore: Record<string, context.PreviewState> = {};\n\n/**\n * Retrieves the metadata cache for the given LoRA name.\n * @param loraName - The name of the LoRA model.\n * @returns The cached metadata state, selected block type, model type, and used blocks, or undefined if not cached.\n */\nexport function getMetadataCache(loraName: string):\n    | {\n          metadataState: context.MetadataState | undefined;\n          selectedLoraBlockType: LoraBlockTypes;\n          selectedModelType: ModelTypes;\n          usingBlocks: Set<string> | undefined;\n      }\n    | undefined {\n    return _metadataCacheStore[loraName];\n}\n\n/**\n * Sets the metadata cache for the given LoRA name.\n * @param loraName - The name of the LoRA model.\n * @param cache - The BasicState containing metadata and related info to cache.\n */\nexport function setMetadataCache(loraName: string, cache: context.BasicState) {\n    _metadataCacheStore[loraName] = {\n        metadataState: cache.metadataState,\n        selectedLoraBlockType: cache.weightState.selectedLoraBlockType,\n        selectedModelType: cache.weightState.selectedModelType,\n        usingBlocks: cache.usingBlocks,\n    };\n}\n\n/**\n * Retrieves the preview cache for the given LoRA name.\n * @param loraName - The name of the LoRA model.\n * @returns The cached PreviewState, or undefined if not cached.\n */\nexport function getPreviewCache(loraName: string): context.PreviewState | undefined {\n    return _previewCacheStore[loraName];\n}\n\n/**\n * Sets the preview cache for the given LoRA name.\n * @param loraName - The name of the LoRA model.\n * @param cache - The PreviewState to cache.\n */\nexport function setPreviewCache(loraName: string, cache: context.PreviewState) {\n    _previewCacheStore[loraName] = cache;\n}\n", "import * as configManager from '@/shared/manager/config-manager';\nimport { LoraBlockTypes, ModelTypes } from '@/shared/types/lora-types';\n\nlet _tabId: string;\nlet _editor: HTMLTextAreaElement;\nlet _selectionStart: number;\nlet _selectionEnd: number;\nlet _loraDefineString: string;\nlet _lbwPresetsMap: Record<string, Record<string, Record<string, string>>> = {};\nlet _step: number = 0;\n\n/**\n * Gets the current tab ID.\n * @returns The tab ID string.\n */\nexport function getTabId(): string {\n    return _tabId;\n}\n\n/**\n * Sets the current tab ID.\n * @param tabId - The tab ID string.\n */\nexport function setTabId(tabId: string): void {\n    _tabId = tabId;\n}\n\n/**\n * Gets the current editor textarea element.\n * @returns The HTMLTextAreaElement for the editor.\n */\nexport function getEditor(): HTMLTextAreaElement {\n    return _editor;\n}\n\n/**\n * Sets the current editor textarea element.\n * @param e - The HTMLTextAreaElement to set as the editor.\n */\nexport function setEditor(e: HTMLTextAreaElement): void {\n    _editor = e;\n}\n\n/**\n * Gets the current selection start index in the editor.\n * @returns The selection start index.\n */\nexport function getSelectionStart(): number {\n    return _selectionStart;\n}\n\n/**\n * Sets the selection start index in the editor.\n * @param selectionStart - The selection start index.\n */\nexport function setSelectionStart(selectionStart: number): void {\n    _selectionStart = selectionStart;\n}\n\n/**\n * Gets the current selection end index in the editor.\n * @returns The selection end index.\n */\nexport function getSelectionEnd(): number {\n    return _selectionEnd;\n}\n\n/**\n * Sets the selection end index in the editor.\n * @param selectionEnd - The selection end index.\n */\nexport function setSelectionEnd(selectionEnd: number): void {\n    _selectionEnd = selectionEnd;\n}\n\n/**\n * Gets the current LoRA define string from the editor.\n * @returns The LoRA define string.\n */\nexport function getLoraDefineString(): string {\n    return _loraDefineString;\n}\n\n/**\n * Sets the current LoRA define string in the editor.\n * @param loraDefineString - The LoRA define string to set.\n */\nexport function setLoraDefineString(loraDefineString: string): void {\n    _loraDefineString = loraDefineString;\n}\n\n/**\n * Gets the current step value from the editor.\n * @returns The step value as a number.\n */\nexport function getStep(): number {\n    return _step || 0;\n}\n\n/**\n * Loads the step value from the editor UI for the specified tab ID.\n * @param tabId - The tab ID string.\n */\nexport function loadStep(tabId: string) {\n    const tab = gradioApp().querySelector(`div:is([id^='tab_${tabId}'][class*='tabitem'])`) as HTMLDivElement;\n    const input = tab.querySelector('div:is([id$=\"_steps\"]) input[type=number]') as HTMLInputElement;\n    _step = +input.value;\n}\n\n/**\n * Gets the LBW presets for the specified model and block type.\n * @param selectedModelType - The selected model type.\n * @param selectedLoraBlockType - The selected LoRA block type.\n * @returns A record of preset names to values.\n */\nexport function getLbwPresets(selectedModelType: ModelTypes, selectedLoraBlockType: LoraBlockTypes): Record<string, string> {\n    return _lbwPresetsMap[selectedModelType || ModelTypes.Unknown][selectedLoraBlockType || LoraBlockTypes.Unknown];\n}\n\n/**\n * Loads the LBW presets from the editor UI for the specified tab ID.\n * @param tabId - The tab ID string.\n */\nexport function loadLbwPresets(tabId: string) {\n    const tab = gradioApp().querySelector(`div:is([id^='tab_${tabId}'][class*='tabitem'])`) as HTMLDivElement;\n    const textarea = tab.querySelector('#lbw_ratiospreset textarea') as HTMLTextAreaElement;\n    const lbwPresetValue = textarea.value ?? '';\n    const lbwPresets = lbwPresetValue.split('\\n').filter((e) => e.trim() !== '');\n\n    const lbwPresetsMap: Record<string, Record<string, Record<string, string>>> = {};\n    for (const modelType of Object.values(ModelTypes)) {\n        lbwPresetsMap[modelType] = {};\n        for (const loraBlockType of Object.values(LoraBlockTypes)) {\n            const lbwPreset: Record<string, string> = {};\n            const lbwPresetValueKey: Record<string, string> = {};\n\n            lbwPresetsMap[modelType][loraBlockType] = lbwPreset;\n\n            const blockLength = configManager.getLbwMasks(modelType, loraBlockType).filter((b) => b == 1).length;\n            for (const line of lbwPresets) {\n                const kv = line.split(':');\n                if (kv.length == 2 && kv[1].split(',').length == blockLength) {\n                    lbwPreset[kv[0]] = kv[1];\n                    lbwPresetValueKey[kv[1]] = kv[0];\n                }\n            }\n        }\n    }\n    _lbwPresetsMap = lbwPresetsMap;\n}\n", "import * as configManager from '@/shared/manager/config-manager';\nimport { LoraBlockTypes, ModelTypes } from '@/shared/types/lora-types';\n\n/**\n * Returns the preset name that matches the given weights for the selected model and block type.\n * @param selectedModelType - The selected model type.\n * @param selectedLoraBlockType - The selected LoRA block type.\n * @param lbwPresets - The record of preset names to values.\n * @param weights - The record of block weights.\n * @returns The matching preset name, or an empty string if no match is found.\n */\nexport function getPreset(\n    selectedModelType: ModelTypes,\n    selectedLoraBlockType: LoraBlockTypes,\n    lbwPresets: Record<string, string>,\n    weights: Record<string, { value: number; checkState?: boolean }>,\n): string {\n    const maskedBlockSet = new Set(configManager.getMaskedLbwBlocks(selectedModelType, selectedLoraBlockType));\n    const weightValue = Object.entries(weights)\n        .filter(([key]) => maskedBlockSet.has(key))\n        .map((entries) => entries[1].value)\n        .join(',');\n    const foundPreset = Object.entries(lbwPresets).find(([, value]) => value === weightValue);\n    if (foundPreset) {\n        return foundPreset[0];\n    }\n    return '';\n}\n\n/**\n * Temporarily disables prompt assist features (TagAutocomplete, pilot) while executing the given function.\n * Saves the original state, executes the function, then restores the original state.\n * @param func - The function to execute with prompt assist disabled.\n */\nexport function withoutPromptAssist(func: () => void): void {\n    let tacActiveInOrg: boolean | undefined;\n    const tacEnabled = typeof window.TAC_CFG !== 'undefined' && window.TAC_CFG;\n\n    let pilotOrg: boolean | undefined;\n    const pilotEnabled = typeof window.pilotIsActive !== 'undefined' && window.pilotIsActive;\n    try {\n        if (tacEnabled) {\n            tacActiveInOrg = window.TAC_CFG.activeIn.global;\n            window.TAC_CFG.activeIn.global = false;\n        }\n        if (pilotEnabled) {\n            pilotOrg = window.pilotIsActive;\n            window.pilotIsActive = false;\n        }\n        func();\n    } finally {\n        if (tacEnabled) {\n            window.TAC_CFG.activeIn.global = tacActiveInOrg;\n        }\n        if (pilotEnabled) {\n            window.pilotIsActive = pilotOrg;\n        }\n    }\n}\n\n/**\n * Computes a simple hash code for the given string.\n * Uses a bitwise XOR and shift algorithm to generate a 32-bit integer hash.\n * @param s - The input string.\n * @returns The computed hash code as a number.\n */\nexport function strHashCode(s: string): number {\n    let hash = 0;\n    if (!s) return hash;\n    for (let i = 0; i < s.length; i++) {\n        const char = s.charCodeAt(i);\n        hash = hash ^ char;\n        hash = (hash << 5) - hash;\n    }\n    return hash & 0xffffffff;\n}\n", "import { WeightControllerTypes } from '@/shared/types/lora-types';\n\nimport * as context from '@/components/contexts/weight-helper-context';\n\n/**\n * Converts a string to lowercase.\n * @param str - The string to convert.\n * @returns The lowercase version of the string.\n */\nexport const lower = (str: string) => str.toLowerCase();\n\n/**\n * Returns a style object to control the display property.\n * @param visible - When true, returns an empty object; when false, sets display to 'none'.\n * @returns A CSS style object.\n */\nexport const getDisplayStyle = (visible: boolean) => (visible ? {} : { display: 'none' });\n\n/**\n * Returns a style object to control the visibility property.\n * @param visible - When true, returns an empty object; when false, sets visibility to 'hidden'.\n * @returns A CSS style object.\n */\nexport const getVisibilityStyle = (visible: boolean) => (visible ? {} : { visibility: 'hidden' });\n\n/**\n * Determines if a weight controller should be disabled based on the current state and block label.\n * @param state - The current BasicState.\n * @param blockLabel - Optional label of the weight block.\n * @returns True if the controller should be disabled, false otherwise.\n */\nexport const disabled = (state: context.BasicState, blockLabel: string | undefined = undefined) => {\n    if (state.uiState.isWaiting) {\n        return true;\n    }\n    switch (blockLabel) {\n        case WeightControllerTypes.TENC:\n        case WeightControllerTypes.UNET:\n        case WeightControllerTypes.START:\n        case WeightControllerTypes.STOP:\n        case undefined:\n            return false;\n    }\n    return state.usingBlocks !== undefined && !state.usingBlocks.has(blockLabel);\n};\n\n/**\n * Expands a range pattern (e.g., 'IN01-IN04') into an array of block labels.\n * If the pattern doesn't contain a valid range format, returns the pattern as a single-element array.\n * @param patterns - The range pattern string.\n * @returns An array of expanded block labels.\n */\nexport function expandRange(patterns: string): string[] {\n    const result: string[] = [];\n    patterns\n        .split(',')\n        .map((b) => b.trim())\n        .forEach((pattern) => {\n            const match = pattern.match(/^([A-Z]+)(\\d+)-\\1(\\d+)$/);\n            if (!match) {\n                result.push(pattern);\n                return;\n            }\n\n            const [, prefix, start, end] = match;\n            const startNum = parseInt(start);\n            const endNum = parseInt(end);\n\n            let i = startNum;\n            while (true) {\n                result.push(`${prefix}${i.toString().padStart(2, '0')}`);\n                if (i == endNum) {\n                    break;\n                }\n                i += startNum < endNum ? 1 : -1;\n            }\n        });\n    return result;\n}\n", "import * as cacheManager from '@/shared/manager/cache-manager';\nimport * as configManager from '@/shared/manager/config-manager';\nimport * as historyManager from '@/shared/manager/history-manager';\nimport * as currentState from '@/shared/state/current-state';\nimport { ModelTypes, WeightControllerTypes } from '@/shared/types/lora-types';\nimport { withoutPromptAssist } from '@/shared/utils/common-utils';\nimport { lower } from '@/shared/utils/helper-utils';\n\nimport * as context from '@/components/contexts/weight-helper-context';\n\nconst REGEX = /<(lora|lyco):([^:]+):([^>]+)>/;\n\n/**\n * Extracts the LoRA definition from the editor based on the mouse event position.\n * @param e - The mouse event from the context menu.\n * @returns Context information if a valid LoRA/lyco tag is found at the cursor position, or undefined if not found.\n */\nexport function getLoraDefineFromEditor(e: MouseEvent):\n    | {\n          tabId: string;\n          textarea: HTMLTextAreaElement;\n          selectionStart: number;\n          selectionEnd: number;\n          namespace: string;\n          loraName: string;\n          loraParams: string;\n          top: number;\n          left: number;\n      }\n    | undefined {\n    const textarea = e.target as HTMLTextAreaElement;\n    if (!window.opts.weight_helper_enabled) {\n        return undefined;\n    }\n    let selectedText = window.getSelection()?.toString();\n    if (selectedText) {\n        return undefined;\n    }\n    const prompt = textarea.value;\n    let tmpSelectionStart = textarea.selectionStart;\n    const lCar = prompt.lastIndexOf('<', tmpSelectionStart - 1);\n    const rCar = prompt.indexOf('>', tmpSelectionStart);\n    if (lCar < 0 || rCar < 0) {\n        return undefined;\n    }\n    selectedText = prompt.substring(lCar, rCar + 1) as string;\n    if ((selectedText.match(/</g) || []).length != 1 || (selectedText.match(/>/g) || []).length != 1) {\n        return undefined;\n    }\n    tmpSelectionStart = lCar;\n    const match = REGEX.exec(selectedText);\n    if (match) {\n        e.preventDefault();\n        const namespace = match[1].toLowerCase();\n        const loraName = match[2];\n        const loraParams = match[3];\n\n        const tabId = textarea.closest(\"[id^='tab_'][class*='tabitem']\")!.id.split('_')[1];\n        const selectionStart = tmpSelectionStart + match.index;\n        const selectionEnd = selectionStart + match.input.trim().length;\n\n        return {\n            tabId: tabId,\n            textarea: textarea,\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd,\n            namespace: namespace,\n            loraName: loraName,\n            loraParams: loraParams,\n            top: (e.pageY + 15) as number,\n            left: e.pageX as number,\n        };\n    }\n    return undefined;\n}\n\n/**\n * Updates the editor textarea with the given text at the current selection.\n * @param updatedText - The text to insert into the editor.\n */\nexport function updateEditor(updatedText: string): void {\n    const textarea = currentState.getEditor();\n    const start = currentState.getSelectionStart();\n    const end = currentState.getSelectionEnd();\n    textarea.value = textarea.value.substring(0, start) + updatedText + textarea.value.substring(end);\n    currentState.setSelectionEnd(start + updatedText.length);\n}\n\n/**\n * Updates the editor textarea with the given text using execCommand.\n * Uses this method to ensure compatibility with certain browser features.\n * @param updatedText - The text to insert into the editor.\n */\nexport function updateEditorWithExecCommand(updatedText: string): void {\n    withoutPromptAssist(() => {\n        const textarea = currentState.getEditor();\n        const start = currentState.getSelectionStart();\n        const end = currentState.getSelectionEnd();\n        textarea.focus();\n        textarea.setSelectionRange(start, end);\n        document.execCommand('insertText', false, updatedText);\n    });\n}\n\n/**\n * Generates output strings for the current LoRA configuration.\n * @param loraName - The name of the LoRA model.\n * @param weightState - The current weight state.\n * @returns An object containing the loraParams string and the complete LoRA tag.\n */\nexport function getOutputStrings(\n    loraName: string,\n    weightState: context.WeightState,\n): {\n    loraParams: string;\n    loraDefine: string;\n} {\n    let updatedText = String(weightState.weights[WeightControllerTypes.TENC].value);\n    let refIdx = 0;\n    let idx = 0;\n    for (const keyType of [WeightControllerTypes.UNET]) {\n        const weight = weightState.weights[keyType];\n        const defVal = configManager.getWeightControllerConfig(keyType as WeightControllerTypes).default;\n        const val = +weight.value;\n        if (weight.checkState || (weight.checkState === undefined && val != defVal)) {\n            if (idx === refIdx) {\n                updatedText += `:${val}`;\n            } else {\n                updatedText += `:${lower(keyType)}=${val}`;\n            }\n            refIdx++;\n        }\n        idx++;\n    }\n    const startDefVal = configManager.getWeightControllerConfig(WeightControllerTypes.START).default;\n    const startVal = weightState.weights[WeightControllerTypes.START].value;\n    const stopDefVal = configManager.getWeightControllerConfig(WeightControllerTypes.STOP).default;\n    let stopVal = weightState.weights[WeightControllerTypes.STOP].value;\n    if (stopVal < 0) {\n        stopVal = configManager.getWeightControllerConfig(WeightControllerTypes.STOP).default;\n    }\n    if (startVal != startDefVal && stopVal != stopDefVal) {\n        updatedText += `:step=${startVal}-${stopVal}`;\n    } else if (startVal != startDefVal) {\n        updatedText += `:start=${startVal}`;\n    } else if (stopVal != stopDefVal) {\n        updatedText += `:stop=${stopVal}`;\n    }\n\n    const { selectedModelType, selectedLoraBlockType } = weightState;\n    const xyzValue = weightState.xyzMode;\n\n    let updatedTextWithPreset = updatedText;\n    if (xyzValue) {\n        updatedText += `:lbw=XYZ`;\n        updatedTextWithPreset += `:lbw=XYZ`;\n    } else if (selectedModelType !== ModelTypes.Unknown) {\n        const lbwWeights = configManager\n            .getLbwMasks(selectedModelType, selectedLoraBlockType)\n            .map((mask, i) => {\n                if (mask === 1) {\n                    return weightState.weights[configManager.getLbwBlocks(selectedModelType)[i]];\n                }\n                return undefined;\n            })\n            .filter((block) => block !== undefined);\n        const lbwDefault = configManager.getWeightControllerConfig(WeightControllerTypes.LBW).default;\n        if (!lbwWeights.every((weight) => weight.value === lbwDefault)) {\n            const lbwValues = lbwWeights.map((weight) => weight.value).join(',');\n\n            updatedText += `:lbw=${lbwValues}`;\n            const lbwPresets = currentState.getLbwPresets(selectedModelType, selectedLoraBlockType);\n            const preset = Object.entries(lbwPresets).find(([, value]) => lbwValues === value);\n            if (preset) {\n                updatedTextWithPreset += `:lbw=${preset[0]}`;\n            } else {\n                updatedTextWithPreset += `:lbw=${lbwValues}`;\n            }\n        }\n    }\n    if (weightState.lbwe) {\n        updatedText += `:lbwe=${weightState.lbwe}`;\n        updatedTextWithPreset += `:lbwe=${weightState.lbwe}`;\n    }\n    return {\n        loraParams: updatedText,\n        loraDefine: `<lora:${loraName}:${updatedTextWithPreset}>`,\n    };\n}\n\n/**\n * Synchronizes the editor with the current Weight Helper state.\n * Updates the cache and history, and optionally cancels changes.\n * @param state - The current Weight Helper state.\n * @param cancel - When true, cancels changes and restores the original editor content.\n */\nexport function syncEditorWithState(state: context.BasicState, cancel: boolean = false): void {\n    const outputStrings = getOutputStrings(state.loraName, state.weightState);\n    if (!window.opts.weight_helper_using_execCommand) {\n        if (cancel) {\n            updateEditor(currentState.getLoraDefineString());\n        }\n    } else {\n        if (state.srcLoraParams !== outputStrings.loraParams) {\n            updateEditorWithExecCommand(outputStrings.loraDefine);\n        }\n    }\n    cacheManager.setMetadataCache(state.loraName, state);\n    if (!state.weightState.xyzMode) {\n        historyManager.addHistory(state.loraName, { loraParams: outputStrings.loraParams, ...state.weightState });\n    }\n    historyManager.storeLocalStorage();\n}\n", "import { CARD_NO_IMAGE_PATH, SELECTABLE_LORA_BLOCK_TYPES, SELECTABLE_MODEL_TYPES } from '@/shared/constants/common-const';\nimport * as cacheManager from '@/shared/manager/cache-manager';\nimport * as configManager from '@/shared/manager/config-manager';\nimport * as historyManager from '@/shared/manager/history-manager';\nimport * as currentState from '@/shared/state/current-state';\nimport * as loraTypes from '@/shared/types/lora-types';\nimport { LoraDefineParams, WeightControllerTypes } from '@/shared/types/lora-types';\nimport { getPreset } from '@/shared/utils/common-utils';\nimport { getOutputStrings } from '@/shared/utils/editor-utils';\n\nimport * as context from '@/components/contexts/weight-helper-context';\n\n/**\n * Creates and returns the initial state for the Weight Helper UI.\n * @returns The initial BasicState object for the Weight Helper.\n */\nexport function createWeightHelperInitState() {\n    const weightHelperProps: context.BasicState = {\n        loraName: '',\n        metadataState: undefined,\n        srcLoraParams: '',\n        weightState: {\n            selectedLoraBlockType: loraTypes.LoraBlockTypes.lora,\n            selectedModelType: loraTypes.ModelTypes.SD,\n            weights: {},\n            lbwe: '',\n            xyzMode: false,\n        },\n        blockGroups: [],\n        usingBlocks: undefined,\n        preset: '',\n        lbwPresets: {},\n        uiState: {\n            isVisible: false,\n            scale: 1,\n            pos: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0,\n            },\n            isMoreButtonVisible: true,\n            isWaiting: false,\n        },\n        lock: false,\n        historyIndex: 0,\n        previewState: {\n            modelId: '',\n            triggerWords: [],\n            negativeTriggerWords: [],\n            modelName: '',\n            thumbUrl: '',\n            hasMetadata: false,\n            description: '',\n            isDescriptionVisible: false,\n            isTagInsertButtonVisible: false,\n        },\n    };\n    return weightHelperProps;\n}\n\n/**\n * Creates and returns the Weight Helper state based on the given parameters.\n * @param namespace - The namespace (e.g., 'lora' or 'lycoris').\n * @param loraName - The name of the LoRA model.\n * @param loraParams - The loraParams string.\n * @param top - The top position for the UI.\n * @param left - The left position for the UI.\n * @returns The constructed BasicState object.\n */\nexport function createWeightHelperState(namespace: string, loraName: string, loraParams: string, top: number, left: number): context.BasicState {\n    let selectedModelType: loraTypes.ModelTypes = loraTypes.ModelTypes.Unknown;\n    let selectedLoraBlockType: loraTypes.LoraBlockTypes = loraTypes.LoraBlockTypes.Unknown;\n    const histories = historyManager.getHistories(loraName);\n    if (histories && histories.length > 0) {\n        const latest = histories[histories.length - 1];\n        selectedModelType = latest.selectedModelType ?? loraTypes.ModelTypes.Unknown;\n        selectedLoraBlockType = latest.selectedLoraBlockType ?? loraTypes.LoraBlockTypes.Unknown;\n    }\n\n    let metadataState: context.MetadataState | undefined;\n    let usingBlocks: Set<string> | undefined;\n    const metadataCache = cacheManager.getMetadataCache(loraName);\n    if (metadataCache) {\n        metadataState = metadataCache.metadataState;\n        selectedModelType = metadataCache.selectedModelType ?? loraTypes.ModelTypes.Unknown;\n        selectedLoraBlockType = metadataCache.selectedLoraBlockType ?? loraTypes.LoraBlockTypes.Unknown;\n        usingBlocks = metadataCache.usingBlocks;\n    }\n\n    const weightState = createWeightState(namespace, loraParams, selectedModelType, selectedLoraBlockType);\n\n    const lbwPresets = currentState.getLbwPresets(weightState.selectedModelType, weightState.selectedLoraBlockType);\n\n    const outputLoraParams = getOutputStrings(loraName, weightState).loraParams;\n\n    let isMoreButtonVisible = false;\n    for (const keyType of [WeightControllerTypes.UNET, WeightControllerTypes.START, WeightControllerTypes.STOP]) {\n        const weight = weightState.weights[keyType];\n        const defVal = configManager.getWeightControllerConfig(keyType as WeightControllerTypes).default;\n        const val = +weight.value;\n        if (weight.checkState || (weight.checkState === undefined && val != defVal)) {\n        } else {\n            isMoreButtonVisible = true;\n            break;\n        }\n    }\n    return {\n        loraName: loraName,\n        metadataState: metadataState,\n        srcLoraParams: outputLoraParams,\n        weightState: weightState,\n        blockGroups: configManager.getLbwBlockGroups(weightState.selectedModelType, weightState.selectedLoraBlockType),\n        usingBlocks: usingBlocks,\n        uiState: {\n            isVisible: true,\n            scale: window.opts.weight_helper_context_menu_scale,\n            isMoreButtonVisible: isMoreButtonVisible,\n            isWaiting: !metadataState,\n            pos: {\n                top: top,\n                right: 0,\n                bottom: 0,\n                left: left,\n            },\n        },\n        previewState: createPreviewState(loraName),\n        preset: getPreset(weightState.selectedModelType, weightState.selectedLoraBlockType, lbwPresets, weightState.weights),\n        lbwPresets: lbwPresets,\n        lock: historyManager.isLocked(loraName, outputLoraParams),\n        historyIndex: histories.length - 1,\n    };\n}\n\n/**\n * Creates and returns the WeightState object from the given parameters.\n * @param namespace - The namespace (e.g., 'lora' or 'lycoris').\n * @param loraParams - The loraParams string.\n * @param modelType - The model type.\n * @param loraBlockType - The LoRA block type.\n * @returns The constructed WeightState object.\n */\nexport function createWeightState(\n    namespace: string,\n    loraParams: string,\n    modelType: loraTypes.ModelTypes,\n    loraBlockType: loraTypes.LoraBlockTypes,\n): {\n    selectedLoraBlockType: loraTypes.LoraBlockTypes;\n    selectedModelType: loraTypes.ModelTypes;\n    weights: Record<string, context.WeightControlState>;\n    lbwe: string;\n    xyzMode: boolean;\n} {\n    const loraParamsProps = createLoraParamsState(loraParams, modelType, loraBlockType);\n    const { weights, lbwe, xyzMode } = loraParamsProps;\n\n    if (loraBlockType === loraTypes.LoraBlockTypes.Unknown) {\n        loraBlockType = namespace === 'lora' ? loraTypes.LoraBlockTypes.lora : loraTypes.LoraBlockTypes.lycoris;\n    }\n\n    return {\n        selectedLoraBlockType: loraBlockType,\n        selectedModelType: modelType,\n        weights: weights,\n        lbwe: lbwe,\n        xyzMode: xyzMode,\n    };\n}\n\n/**\n * Parses the loraParams string and creates the corresponding state for loraParamss, weights, and related flags.\n * @param loraParams - The loraParams string.\n * @param modelType - The model type.\n * @param loraBlockType - The LoRA block type.\n * @returns The parsed state including weights, lbwe, and xyzMode.\n */\nexport function createLoraParamsState(\n    loraParams: string,\n    modelType: loraTypes.ModelTypes,\n    loraBlockType: loraTypes.LoraBlockTypes,\n): {\n    selectedModelType: loraTypes.ModelTypes;\n    selectedLoraBlockType: loraTypes.LoraBlockTypes;\n    weights: Record<string, context.WeightControlState>;\n    lbwe: string;\n    xyzMode: boolean;\n} {\n    const loraParamss = loraParams.split(':');\n\n    const loraParamsMap: Record<string, string> = {};\n    for (let i = 0; i < loraParamss.length; i++) {\n        let key: string;\n        let value: string;\n        if (loraParamss[i].indexOf('=') >= 0) {\n            const keyValue = loraParamss[i].split('=');\n            key = keyValue[0].toLowerCase();\n            value = keyValue[1];\n        } else {\n            key = [LoraDefineParams.te, LoraDefineParams.unet][i];\n            value = loraParamss[i];\n        }\n        loraParamsMap[key] = value;\n    }\n\n    const loraSdCombination: {\n        modelType: loraTypes.ModelTypes;\n        loraBlockType: loraTypes.LoraBlockTypes;\n        presets: Record<string, string>;\n        masks: number[];\n    }[] = [];\n    for (const modelType of Object.values(SELECTABLE_MODEL_TYPES)) {\n        for (const loraBlockType of Object.values(SELECTABLE_LORA_BLOCK_TYPES)) {\n            loraSdCombination.push({\n                modelType: modelType,\n                loraBlockType: loraBlockType,\n                presets: currentState.getLbwPresets(modelType, loraBlockType),\n                masks: configManager.getLbwMasks(modelType, loraBlockType),\n            });\n        }\n    }\n\n    let te = configManager.getWeightControllerConfig(WeightControllerTypes.TENC).default;\n    let unet: number | undefined = undefined;\n\n    let vStart = configManager.getWeightControllerConfig(WeightControllerTypes.START).default;\n    let vStop = configManager.getWeightControllerConfig(WeightControllerTypes.STOP).default;\n\n    const lbwVals: number[] = [];\n    let lbwe: string = '';\n    let xyzModeFlag = false;\n\n    Object.entries(loraParamsMap).forEach(([loraParamKey, value]) => {\n        switch (loraParamKey) {\n            case LoraDefineParams.lbw:\n                if (value === 'XYZ') {\n                    xyzModeFlag = true;\n                    break;\n                }\n                let blocks = value.split(',');\n                for (const loraSd of loraSdCombination) {\n                    if (blocks.length === 1) {\n                        if (value in loraSd.presets) {\n                            blocks = loraSd.presets[value].split(',');\n                        } else {\n                            continue;\n                        }\n                    }\n                    if (blocks.length === loraSd.masks.filter((b) => b == 1).length) {\n                        modelType = loraSd.modelType;\n                        loraBlockType = loraSd.loraBlockType;\n                        let refIdx = 0;\n                        for (const enable of loraSd.masks) {\n                            if (enable) {\n                                lbwVals.push(+blocks[refIdx]);\n                                refIdx++;\n                            } else {\n                                lbwVals.push(0);\n                            }\n                        }\n                        break;\n                    }\n                }\n                break;\n            case LoraDefineParams.step:\n                const startStop = value.split('-');\n                vStart = Math.round(+startStop[0]);\n                vStop = Math.round(+startStop[1]);\n                break;\n            case LoraDefineParams.lbwe:\n                lbwe = value;\n                break;\n            case LoraDefineParams.te:\n                te = +value;\n                break;\n            case LoraDefineParams.unet:\n                unet = +value;\n                break;\n            case LoraDefineParams.start:\n                vStart = Math.round(+value);\n                break;\n            case LoraDefineParams.stop:\n                vStop = Math.round(+value);\n                break;\n        }\n    });\n\n    let useUnet = true;\n    if (unet === undefined) {\n        unet = configManager.getWeightControllerConfig(WeightControllerTypes.UNET).default;\n        useUnet = false;\n    }\n\n    const lbws: Record<string, context.WeightControlState> = {};\n    if (modelType !== loraTypes.ModelTypes.Unknown) {\n        const blocks = configManager.getLbwBlocks(modelType);\n        if (lbwVals.length === 0) {\n            for (let i = 0; i < blocks.length; i++) {\n                lbwVals.push(configManager.getWeightControllerConfig(WeightControllerTypes.LBW).default);\n            }\n        }\n        lbwVals.forEach((lbw, i) => {\n            lbws[blocks[i]] = {\n                initValue: lbw,\n                value: lbw,\n                sliderMin: Math.min(lbw, configManager.getWeightControllerConfig(WeightControllerTypes.LBW).min),\n                sliderMax: Math.max(lbw, configManager.getWeightControllerConfig(WeightControllerTypes.LBW).max),\n            };\n        });\n    }\n\n    return {\n        selectedLoraBlockType: loraBlockType,\n        selectedModelType: modelType,\n        weights: {\n            [WeightControllerTypes.TENC]: {\n                initValue: te,\n                value: te,\n                sliderMin: Math.min(te, configManager.getWeightControllerConfig(WeightControllerTypes.TENC).min),\n                sliderMax: Math.max(te, configManager.getWeightControllerConfig(WeightControllerTypes.TENC).max),\n            },\n            [WeightControllerTypes.UNET]: {\n                initValue: unet,\n                value: unet,\n                sliderMin: Math.min(unet, configManager.getWeightControllerConfig(WeightControllerTypes.UNET).min),\n                sliderMax: Math.max(unet, configManager.getWeightControllerConfig(WeightControllerTypes.UNET).max),\n                initCheckState: useUnet,\n                checkState: useUnet,\n            },\n            [WeightControllerTypes.START]: {\n                initValue: vStart,\n                value: vStart,\n                sliderMin: Math.min(vStart, configManager.getWeightControllerConfig(WeightControllerTypes.START).min),\n                sliderMax: Math.max(vStart, configManager.getWeightControllerConfig(WeightControllerTypes.START).max),\n            },\n            [WeightControllerTypes.STOP]: {\n                initValue: vStop,\n                value: vStop,\n                sliderMin: Math.min(vStop, configManager.getWeightControllerConfig(WeightControllerTypes.STOP).min),\n                sliderMax: Math.max(vStop, configManager.getWeightControllerConfig(WeightControllerTypes.STOP).max),\n            },\n            ...lbws,\n        },\n        lbwe: lbwe,\n        xyzMode: xyzModeFlag,\n    };\n}\n\n/**\n * Creates and returns the PreviewState for the given loraName, using cache if available.\n * @param loraName - The name of the LoRA model.\n * @returns The PreviewState object for the given LoRA model.\n */\nfunction createPreviewState(loraName: string): context.PreviewState {\n    const previewCache = cacheManager.getPreviewCache(loraName);\n    if (previewCache) {\n        return previewCache;\n    }\n    return {\n        modelId: '',\n        triggerWords: [''],\n        negativeTriggerWords: [''],\n        modelName: '',\n        thumbUrl: CARD_NO_IMAGE_PATH,\n        hasMetadata: false,\n        description: '',\n        isDescriptionVisible: false,\n        isTagInsertButtonVisible: false,\n    };\n}\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {import('./index').ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tif (node && node.parentNode) node.parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\nimport { NULL, UNDEFINED } from './constants';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != NULL) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] == UNDEFINED) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, NULL);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {import('./internal').VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: NULL,\n\t\t_parent: NULL,\n\t\t_depth: 0,\n\t\t_dom: NULL,\n\t\t_component: NULL,\n\t\tconstructor: UNDEFINED,\n\t\t_original: original == NULL ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == NULL && options.vnode != NULL) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: NULL };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != NULL && vnode.constructor == UNDEFINED;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE, NULL } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != NULL && this._nextState != this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == NULL) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](https://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == NULL) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: NULL;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != NULL && sibling._dom != NULL) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : NULL;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : NULL,\n\t\t\tcommitQueue,\n\t\t\toldDom == NULL ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != NULL && vnode._component != NULL) {\n\t\tvnode._dom = vnode._component.base = NULL;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != NULL && child._dom != NULL) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce != options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c,\n\t\tl = 1;\n\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile (rerenderQueue.length) {\n\t\t// Keep the rerender queue sorted by (depth, insertion order). The queue\n\t\t// will initially be sorted on the first iteration only if it has more than 1 item.\n\t\t//\n\t\t// New items can be added to the queue e.g. when rerendering a provider, so we want to\n\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t// single pass\n\t\tif (rerenderQueue.length > l) {\n\t\t\trerenderQueue.sort(depthSort);\n\t\t}\n\n\t\tc = rerenderQueue.shift();\n\t\tl = rerenderQueue.length;\n\n\t\tif (c._dirty) {\n\t\t\trenderComponent(c);\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { IS_NON_DIMENSIONAL, NULL, SVG_NAMESPACE } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] == '-') {\n\t\tstyle.setProperty(key, value == NULL ? '' : value);\n\t} else if (value == NULL) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\nconst CAPTURE_REGEX = /(PointerCapture)$|Capture$/i;\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name == 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] != oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] == 'o' && name[1] == 'n') {\n\t\tuseCapture = name != (name = name.replace(CAPTURE_REGEX, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname == 'onFocusOut' ||\n\t\t\tname == 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == SVG_NAMESPACE) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == NULL ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != NULL && (value !== false || name[4] == '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {import('../internal').PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == NULL) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n", "import { enqueueRender } from './component';\nimport { NULL } from './constants';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tfunction Context(props) {\n\t\tif (!this.getChildContext) {\n\t\t\t/** @type {Set<import('./internal').Component> | null} */\n\t\t\tlet subs = new Set();\n\t\t\tlet ctx = {};\n\t\t\tctx[Context._id] = this;\n\n\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\tsubs = NULL;\n\t\t\t};\n\n\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t// @ts-expect-error even\n\t\t\t\tif (this.props.value != _props.value) {\n\t\t\t\t\tsubs.forEach(c => {\n\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.sub = c => {\n\t\t\t\tsubs.add(c);\n\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\tif (subs) {\n\t\t\t\t\t\tsubs.delete(c);\n\t\t\t\t\t}\n\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\treturn props.children;\n\t}\n\n\tContext._id = '__cC' + i++;\n\tContext._defaultValue = defaultValue;\n\n\t/** @type {import('./internal').FunctionComponent} */\n\tContext.Consumer = (props, contextValue) => {\n\t\treturn props.children(contextValue);\n\t};\n\n\t// we could also get rid of _contextRef entirely\n\tContext.Provider =\n\t\tContext._contextRef =\n\t\tContext.Consumer.contextType =\n\t\t\tContext;\n\n\treturn Context;\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport {\n\tEMPTY_OBJ,\n\tEMPTY_ARR,\n\tINSERT_VNODE,\n\tMATCHED,\n\tUNDEFINED,\n\tNULL\n} from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\toldDom = constructNewChildrenArray(\n\t\tnewParentVNode,\n\t\trenderResult,\n\t\toldChildren,\n\t\toldDom,\n\t\tnewChildrenLength\n\t);\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (childVNode == NULL) continue;\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index == -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tlet result = diff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, NULL, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == NULL && newDom != NULL) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (typeof childVNode.type == 'function' && result !== UNDEFINED) {\n\t\t\toldDom = result;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(\n\tnewParentVNode,\n\trenderResult,\n\toldChildren,\n\toldDom,\n\tnewChildrenLength\n) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = new Array(newChildrenLength);\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == NULL ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tnewParentVNode._children[i] = NULL;\n\t\t\tcontinue;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tNULL,\n\t\t\t\tchildVNode,\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (childVNode.constructor == UNDEFINED && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : NULL,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tconst matchingIndex = (childVNode._index = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t));\n\n\t\toldVNode = NULL;\n\t\tif (matchingIndex != -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original == null\n\t\tconst isMounting = oldVNode == NULL || oldVNode._original == NULL;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\t// When the array of children is growing we need to decrease the skew\n\t\t\t\t// as we are adding a new element to the array.\n\t\t\t\t// Example:\n\t\t\t\t// [1, 2, 3] --> [0, 1, 2, 3]\n\t\t\t\t// oldChildren   newChildren\n\t\t\t\t//\n\t\t\t\t// The new element is at index 0, so our skew is 0,\n\t\t\t\t// we need to decrease the skew as we are adding a new element.\n\t\t\t\t// The decrease will cause us to compare the element at position 1\n\t\t\t\t// with value 1 with the element at position 0 with value 0.\n\t\t\t\t//\n\t\t\t\t// A linear concept is applied when the array is shrinking,\n\t\t\t\t// if the length is unchanged we can assume that no skew\n\t\t\t\t// changes are needed.\n\t\t\t\tif (newChildrenLength > oldChildrenLength) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else if (newChildrenLength < oldChildrenLength) {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex != skewedIndex) {\n\t\t\t// When we move elements around i.e. [0, 1, 2] --> [1, 0, 2]\n\t\t\t// --> we diff 1, we find it at position 1 while our skewed index is 0 and our skew is 0\n\t\t\t//     we set the skew to 1 as we found an offset.\n\t\t\t// --> we diff 0, we find it at position 0 while our skewed index is at 2 and our skew is 1\n\t\t\t//     this makes us increase the skew again.\n\t\t\t// --> we diff 2, we find it at position 2 while our skewed index is at 4 and our skew is 2\n\t\t\t//\n\t\t\t// this becomes an optimization question where currently we see a 1 element offset as an insertion\n\t\t\t// or deletion i.e. we optimize for [0, 1, 2] --> [9, 0, 1, 2]\n\t\t\t// while a more than 1 offset we see as a swap.\n\t\t\t// We could probably build heuristics for having an optimized course of action here as well, but\n\t\t\t// might go at the cost of some bytes.\n\t\t\t//\n\t\t\t// If we wanted to optimize for i.e. only swaps we'd just do the last two code-branches and have\n\t\t\t// only the first item be a re-scouting and all the others fall in their skewed counter-part.\n\t\t\t// We could also further optimize for swaps\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else {\n\t\t\t\tif (matchingIndex > skewedIndex) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\n\t\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t\t// match the new skew index (i + new skew)\n\t\t\t\t// In the former two branches we know that it matches after skewing\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != NULL && (oldVNode._flags & MATCHED) == 0) {\n\t\t\t\tif (oldVNode._dom == oldDom) {\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (oldDom && parentVNode.type && !parentDom.contains(oldDom)) {\n\t\t\toldDom = getDomSibling(parentVNode);\n\t\t}\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || NULL);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != NULL && oldDom.nodeType == 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == NULL || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\t//\n\t// If there is an unkeyed functional VNode, that isn't a built-in like our Fragment,\n\t// we should not search as we risk re-using state of an unrelated VNode. (reverted for now)\n\tlet shouldSearch =\n\t\t// (typeof type != 'function' || type === Fragment || key) &&\n\t\tremainingOldChildren >\n\t\t(oldVNode != NULL && (oldVNode._flags & MATCHED) == 0 ? 1 : 0);\n\n\tif (\n\t\t(oldVNode === NULL && childVNode.key == null) ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype == oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) == 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\tlet x = skewedIndex - 1;\n\t\tlet y = skewedIndex + 1;\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype == oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype == oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import {\n\tEMPTY_OBJ,\n\tMATH_NAMESPACE,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tNULL,\n\tRESET_MODE,\n\tSVG_NAMESPACE,\n\tUNDEFINED,\n\tXHTML_NAMESPACE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * @template {any} T\n * @typedef {import('../internal').Ref<T>} Ref<T>\n */\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor != UNDEFINED) return NULL;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == NULL) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != NULL) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tc.componentWillMount != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != NULL &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original == oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original != oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.some(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != NULL) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != NULL) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != NULL) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != NULL && tmp.type === Fragment && tmp.key == NULL;\n\t\t\tlet renderResult = tmp;\n\n\t\t\tif (isTopLevelFragment) {\n\t\t\t\trenderResult = cloneNode(tmp.props.children);\n\t\t\t}\n\n\t\t\toldDom = diffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = NULL;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = NULL;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != NULL) {\n\t\t\t\tif (e.then) {\n\t\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t\t: MODE_SUSPENDED;\n\n\t\t\t\t\twhile (oldDom && oldDom.nodeType == 8 && oldDom.nextSibling) {\n\t\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = NULL;\n\t\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = excessDomChildren.length; i--; ) {\n\t\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == NULL &&\n\t\tnewVNode._original == oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\toldDom = newVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n\n\treturn newVNode._flags & MODE_SUSPENDED ? undefined : oldDom;\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\nfunction cloneNode(node) {\n\tif (\n\t\ttypeof node != 'object' ||\n\t\tnode == NULL ||\n\t\t(node._depth && node._depth > 0)\n\t) {\n\t\treturn node;\n\t}\n\n\tif (isArray(node)) {\n\t\treturn node.map(cloneNode);\n\t}\n\n\treturn assign({}, node);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType == 'svg') namespace = SVG_NAMESPACE;\n\telse if (nodeType == 'math') namespace = MATH_NAMESPACE;\n\telse if (!namespace) namespace = XHTML_NAMESPACE;\n\n\tif (excessDomChildren != NULL) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value == !!nodeType &&\n\t\t\t\t(nodeType ? value.localName == nodeType : value.nodeType == 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = NULL;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == NULL) {\n\t\tif (nodeType == NULL) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tif (isHydrating) {\n\t\t\tif (options._hydrationMismatch)\n\t\t\t\toptions._hydrationMismatch(newVNode, excessDomChildren);\n\t\t\tisHydrating = false;\n\t\t}\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = NULL;\n\t}\n\n\tif (nodeType == NULL) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data != newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != NULL) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (!(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, NULL, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html != oldHtml.__html && newHtml.__html != dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\t// @ts-expect-error\n\t\t\t\tnewVNode.type == 'template' ? dom.content : dom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType == 'foreignObject' ? XHTML_NAMESPACE : namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != NULL) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (nodeType == 'progress' && inputValue == NULL) {\n\t\t\t\tdom.removeAttribute('value');\n\t\t\t} else if (\n\t\t\t\tinputValue != UNDEFINED &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType == 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType == 'option' && inputValue != oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked != UNDEFINED && checked != dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != NULL) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current == vnode._dom) {\n\t\t\tapplyRef(r, NULL, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != NULL) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = NULL;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\tvnode._component = vnode._parent = vnode._dom = UNDEFINED;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ, NULL } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\t// https://github.com/preactjs/preact/issues/3794\n\tif (parentDom == document) {\n\t\tparentDom = document.documentElement;\n\t}\n\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? NULL\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, NULL, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? NULL\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: NULL,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\nimport { NULL, UNDEFINED } from './constants';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] == UNDEFINED && defaultProps != UNDEFINED) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tNULL\n\t);\n}\n", "import { NULL } from '../constants';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component,\n\t\t/** @type {import('../internal').ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != NULL) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != NULL) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingArgs = hookItem._nextValue = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = hookState._component.props !== p;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn prevScu\n\t\t\t\t\t? prevScu.call(this, p, s, c) || shouldUpdate\n\t\t\t\t\t: shouldUpdate;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tconst result = ref(createHandle());\n\t\t\t\treturn () => {\n\t\t\t\t\tref(null);\n\t\t\t\t\tif (result && typeof result == 'function') result();\n\t\t\t\t};\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\n/**\n * Check if two values are the same value\n * @param {*} x\n * @param {*} y\n * @returns {boolean}\n */\nexport function is(x, y) {\n\treturn (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\n", "import { useState, useLayoutEffect, useEffect } from 'preact/hooks';\nimport { is } from './util';\n\n/**\n * This is taken from https://github.com/facebook/react/blob/main/packages/use-sync-external-store/src/useSyncExternalStoreShimClient.js#L84\n * on a high level this cuts out the warnings, ... and attempts a smaller implementation\n * @typedef {{ _value: any; _getSnapshot: () => any }} Store\n */\nexport function useSyncExternalStore(subscribe, getSnapshot) {\n\tconst value = getSnapshot();\n\n\t/**\n\t * @typedef {{ _instance: Store }} StoreRef\n\t * @type {[StoreRef, (store: StoreRef) => void]}\n\t */\n\tconst [{ _instance }, forceUpdate] = useState({\n\t\t_instance: { _value: value, _getSnapshot: getSnapshot }\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t_instance._value = value;\n\t\t_instance._getSnapshot = getSnapshot;\n\n\t\tif (didSnapshotChange(_instance)) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\t}, [subscribe, value, getSnapshot]);\n\n\tuseEffect(() => {\n\t\tif (didSnapshotChange(_instance)) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\n\t\treturn subscribe(() => {\n\t\t\tif (didSnapshotChange(_instance)) {\n\t\t\t\tforceUpdate({ _instance });\n\t\t\t}\n\t\t});\n\t}, [subscribe]);\n\n\treturn value;\n}\n\n/** @type {(inst: Store) => boolean} */\nfunction didSnapshotChange(inst) {\n\tconst latestGetSnapshot = inst._getSnapshot;\n\tconst prevValue = inst._value;\n\ttry {\n\t\tconst nextValue = latestGetSnapshot();\n\t\treturn !is(prevValue, nextValue);\n\t} catch (error) {\n\t\treturn true;\n\t}\n}\n\nexport function startTransition(cb) {\n\tcb();\n}\n\nexport function useDeferredValue(val) {\n\treturn val;\n}\n\nexport function useTransition() {\n\treturn [false, startTransition];\n}\n\n// TODO: in theory this should be done after a VNode is diffed as we want to insert\n// styles/... before it attaches\nexport const useInsertionEffect = useLayoutEffect;\n", "import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p, c) {\n\tthis.props = p;\n\tthis.context = c;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function (props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n", "import { createElement } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, props);\n\t}\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n", "import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref || null);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n", "import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n", "import { Component, createElement, options, Fragment } from 'preact';\nimport { MODE_HYDRATE } from '../../src/constants';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function (error, newVNode, oldVNode, errorInfo) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode, errorInfo);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function (vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._flags & MODE_HYDRATE) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\n\t\t\tvnode._component._force = true;\n\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode && originalParent) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.appendChild(vnode._dom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function (promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tif (\n\t\t!c._pendingSuspensionCount++ &&\n\t\t!(suspendingVNode._flags & MODE_HYDRATE)\n\t) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function () {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function (props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._flags &= ~MODE_HYDRATE;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n", "import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function (child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function (props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate =\n\tSuspenseList.prototype.componentDidMount = function () {\n\t\t// Iterate through all children after mounting for two reasons:\n\t\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t\t//    The nodes can now be completely consumed from the linked list.\n\t\t// 2. Handle nodes that might have gotten resolved between render and\n\t\t//    componentDidMount.\n\t\tthis._map.forEach((node, child) => {\n\t\t\tresolve(this, child, node);\n\t\t});\n\t};\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { createElement, render } from 'preact';\n\n/**\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\n */\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\treturn props.children;\n}\n\n/**\n * Portal component\n * @this {import('./internal').Component}\n * @param {object | null | undefined} props\n *\n * TODO: use createRoot() instead of fake root\n */\nfunction Portal(props) {\n\tconst _this = this;\n\tlet container = props._container;\n\n\t_this.componentWillUnmount = function () {\n\t\trender(null, _this._temp);\n\t\t_this._temp = null;\n\t\t_this._container = null;\n\t};\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\t_this.componentWillUnmount();\n\t}\n\n\tif (!_this._temp) {\n\t\t_this._container = container;\n\n\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\n\t\t_this._temp = {\n\t\t\tnodeType: 1,\n\t\t\tparentNode: container,\n\t\t\tchildNodes: [],\n\t\t\tcontains: () => true,\n\t\t\t// Technically this isn't needed\n\t\t\tappendChild(child) {\n\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t_this._container.appendChild(child);\n\t\t\t},\n\t\t\tinsertBefore(child, before) {\n\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t_this._container.insertBefore(child, before);\n\t\t\t},\n\t\t\tremoveChild(child) {\n\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\n\t\t\t\t_this._container.removeChild(child);\n\t\t\t}\n\t\t};\n\t}\n\n\t// Render our wrapping element into temp.\n\trender(\n\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\n\t\t_this._temp\n\t);\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\tconst el = createElement(Portal, { _vnode: vnode, _container: container });\n\tel.containerInfo = container;\n\treturn el;\n}\n", "import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\nimport {\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tuseEffect,\n\tuseId,\n\tuseImperativeHandle,\n\tuseLayoutEffect,\n\tuseMemo,\n\tuseReducer,\n\tuseRef,\n\tuseState\n} from 'preact/hooks';\nimport {\n\tuseDeferredValue,\n\tuseInsertionEffect,\n\tuseSyncExternalStore,\n\tuseTransition\n} from './index';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS =\n\t/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\nconst ON_ANI = /^on(Ani|Tra|Tou|BeforeInp|Compo)/;\nconst CAMEL_REPLACE = /[A-Z0-9]/g;\nconst IS_DOM = typeof document !== 'undefined';\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/\n\t\t: /fil|che|ra/\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nconst classNameDescriptorNonEnumberable = {\n\tenumerable: false,\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nfunction handleDomVNode(vnode) {\n\tlet props = vnode.props,\n\t\ttype = vnode.type,\n\t\tnormalizedProps = {};\n\n\tlet isNonDashedType = type.indexOf('-') === -1;\n\tfor (let i in props) {\n\t\tlet value = props[i];\n\n\t\tif (\n\t\t\t(i === 'value' && 'defaultValue' in props && value == null) ||\n\t\t\t// Emulate React's behavior of not rendering the contents of noscript tags on the client.\n\t\t\t(IS_DOM && i === 'children' && type === 'noscript') ||\n\t\t\ti === 'class' ||\n\t\t\ti === 'className'\n\t\t) {\n\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t// a default value\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet lowerCased = i.toLowerCase();\n\t\tif (i === 'defaultValue' && 'value' in props && props.value == null) {\n\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\ti = 'value';\n\t\t} else if (i === 'download' && value === true) {\n\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t// value will be used as the file name and the file will be called\n\t\t\t// \"true\" upon downloading it.\n\t\t\tvalue = '';\n\t\t} else if (lowerCased === 'translate' && value === 'no') {\n\t\t\tvalue = false;\n\t\t} else if (lowerCased[0] === 'o' && lowerCased[1] === 'n') {\n\t\t\tif (lowerCased === 'ondoubleclick') {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\tlowerCased === 'onchange' &&\n\t\t\t\t(type === 'input' || type === 'textarea') &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\tlowerCased = i = 'oninput';\n\t\t\t} else if (lowerCased === 'onfocus') {\n\t\t\t\ti = 'onfocusin';\n\t\t\t} else if (lowerCased === 'onblur') {\n\t\t\t\ti = 'onfocusout';\n\t\t\t} else if (ON_ANI.test(i)) {\n\t\t\t\ti = lowerCased;\n\t\t\t}\n\t\t} else if (isNonDashedType && CAMEL_PROPS.test(i)) {\n\t\t\ti = i.replace(CAMEL_REPLACE, '-$&').toLowerCase();\n\t\t} else if (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\n\t\t// Add support for onInput and onChange, see #3561\n\t\t// if we have an oninput prop already change it to oninputCapture\n\t\tif (lowerCased === 'oninput') {\n\t\t\ti = lowerCased;\n\t\t\tif (normalizedProps[i]) {\n\t\t\t\ti = 'oninputCapture';\n\t\t\t}\n\t\t}\n\n\t\tnormalizedProps[i] = value;\n\t}\n\n\t// Add support for array select values: <select multiple value={[]} />\n\tif (\n\t\ttype == 'select' &&\n\t\tnormalizedProps.multiple &&\n\t\tArray.isArray(normalizedProps.value)\n\t) {\n\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\tchild.props.selected =\n\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t});\n\t}\n\n\t// Adding support for defaultValue in select tag\n\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\tif (normalizedProps.multiple) {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t} else {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t}\n\t\t});\n\t}\n\n\tif (props.class && !props.className) {\n\t\tnormalizedProps.class = props.class;\n\t\tObject.defineProperty(\n\t\t\tnormalizedProps,\n\t\t\t'className',\n\t\t\tclassNameDescriptorNonEnumberable\n\t\t);\n\t} else if (props.className && !props.class) {\n\t\tnormalizedProps.class = normalizedProps.className = props.className;\n\t} else if (props.class && props.className) {\n\t\tnormalizedProps.class = normalizedProps.className = props.className;\n\t}\n\n\tvnode.props = normalizedProps;\n}\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\t// only normalize props on Element nodes\n\tif (typeof vnode.type === 'string') {\n\t\thandleDomVNode(vnode);\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function (vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\nconst oldDiffed = options.diffed;\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = function (vnode) {\n\tif (oldDiffed) {\n\t\toldDiffed(vnode);\n\t}\n\n\tconst props = vnode.props;\n\tconst dom = vnode._dom;\n\n\tif (\n\t\tdom != null &&\n\t\tvnode.type === 'textarea' &&\n\t\t'value' in props &&\n\t\tprops.value !== dom.value\n\t) {\n\t\tdom.value = props.value == null ? '' : props.value;\n\t}\n\n\tcurrentComponent = null;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t},\n\t\t\tuseCallback,\n\t\t\tuseContext,\n\t\t\tuseDebugValue,\n\t\t\tuseDeferredValue,\n\t\t\tuseEffect,\n\t\t\tuseId,\n\t\t\tuseImperativeHandle,\n\t\t\tuseInsertionEffect,\n\t\t\tuseLayoutEffect,\n\t\t\tuseMemo,\n\t\t\t// useMutableSource, // experimental-only and replaced by uSES, likely not worth supporting\n\t\t\tuseReducer,\n\t\t\tuseRef,\n\t\t\tuseState,\n\t\t\tuseSyncExternalStore,\n\t\t\tuseTransition\n\t\t}\n\t}\n};\n", "import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport {\n\tuseInsertionEffect,\n\tstartTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tuseTransition\n} from './hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport {\n\thydrate,\n\trender,\n\tREACT_ELEMENT_TYPE,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n} from './render';\n\nconst version = '18.3.1'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Check if the passed element is a Fragment node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isFragment(element) {\n\treturn isValidElement(element) && element.type === Fragment;\n}\n\n/**\n * Check if the passed element is a Memo node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isMemo(element) {\n\treturn (\n\t\t!!element &&\n\t\t!!element.displayName &&\n\t\t(typeof element.displayName === 'string' ||\n\t\t\telement.displayName instanceof String) &&\n\t\telement.displayName.startsWith('Memo(')\n\t);\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\n/**\n * In React, `flushSync` flushes the entire tree and forces a rerender. It's\n * implmented here as a no-op.\n * @template Arg\n * @template Result\n * @param {(arg: Arg) => Result} callback function that runs before the flush\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n * @returns\n */\nconst flushSync = (callback, arg) => callback(arg);\n\n/**\n * Strict Mode is not implemented in Preact, so we provide a stand-in for it\n * that just renders its children without imposing any restrictions.\n */\nconst StrictMode = Fragment;\n\n// compat to react-is\nexport const isElement = isValidElement;\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tisFragment,\n\tisMemo,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tuseInsertionEffect,\n\tstartTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tuseTransition,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseInsertionEffect,\n\tuseTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tstartTransition,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tisElement,\n\tisFragment,\n\tisMemo,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n", "let metadataAbortController: AbortController | null = null;\nlet previewAbortController: AbortController | null = null;\n\n/**\n * Returns the global AbortController for metadata fetch requests.\n * Creates a new controller if one doesn't exist.\n * @returns The AbortController instance for metadata requests.\n */\nexport function getMetadataAbortController(): AbortController {\n    if (!metadataAbortController) {\n        metadataAbortController = new AbortController();\n    }\n    return metadataAbortController;\n}\n\n/**\n * Aborts any ongoing metadata fetch request and creates a new AbortController.\n * @returns The new AbortController instance for metadata requests.\n */\nexport function resetMetadataAbortController(): AbortController {\n    if (metadataAbortController) {\n        metadataAbortController.abort();\n    }\n    metadataAbortController = new AbortController();\n    return metadataAbortController;\n}\n\n/**\n * Returns the global AbortController for preview fetch requests.\n * Creates a new controller if one doesn't exist.\n * @returns The AbortController instance for preview requests.\n */\nexport function getPreviewAbortController(): AbortController {\n    if (!previewAbortController) {\n        previewAbortController = new AbortController();\n    }\n    return previewAbortController;\n}\n\n/**\n * Aborts any ongoing preview fetch request and creates a new AbortController.\n * @returns The new AbortController instance for preview requests.\n */\nexport function resetPreviewAbortController(): AbortController {\n    if (previewAbortController) {\n        previewAbortController.abort();\n    }\n    previewAbortController = new AbortController();\n    return previewAbortController;\n}\n", "import { ModelTypes } from '@/shared/types/lora-types';\n\nimport * as context from '@/components/contexts/weight-helper-context';\n\n/**\n * Fetches metadata for the specified LoRA model from the backend API.\n * @param loraName - The name of the LoRA model.\n * @param force - Whether to force a refresh of the metadata regardless of cache.\n * @param signal - Optional AbortSignal for canceling the request.\n * @returns A promise resolving to the metadata object.\n */\nexport async function fetchMetadata(\n    loraName: string,\n    force: boolean,\n    signal?: AbortSignal,\n): Promise<{ algorithm: string; baseModel: string; modelType: ModelTypes; usingBlocks: string[] | null }> {\n    const res = await fetch(`/whapi/v1/get_metadata?key=${encodeURIComponent(loraName)}&force=${force}`, {\n        method: 'POST',\n        signal: signal,\n    });\n    if (!res.ok) {\n        throw new Error(`Failed to set up API endpoints. Please reload the page.: ${res.status}`);\n    }\n    return await res.json();\n}\n\n/**\n * Fetches preview information for the specified LoRA model from the backend API.\n * @param loraName - The name of the LoRA model.\n * @param signal - Optional AbortSignal for canceling the request.\n * @returns A promise resolving to the PreviewState object.\n */\nexport async function fetchPreviewData(loraName: string, signal?: AbortSignal): Promise<context.PreviewState> {\n    const res = await fetch(`/whapi/v1/get_preview_info?key=${encodeURIComponent(loraName)}`, {\n        method: 'POST',\n        signal: signal,\n    });\n    if (!res.ok) {\n        throw new Error(`Failed to set up API endpoints. Please reload the page.: ${res.status}`);\n    }\n    const json = await res.json();\n    return {\n        ...json,\n        isDescriptionVisible: false,\n        isTagInsertButtonVisible: true,\n    };\n}\n", "import * as configManager from '@/shared/manager/config-manager';\nimport { WeightControllerTypes } from '@/shared/types/lora-types';\nimport { expandRange } from '@/shared/utils/helper-utils';\n\nimport * as context from '@/components/contexts/weight-helper-context';\n\n/**\n * Merges the current weights with the given block groups.\n * Ensures that all blocks from the expanded groups are present in the weights object.\n * If a block is missing, it is initialized with the default LBW value.\n * @param currentWeights - The current record of block weights.\n * @param groups - The array of block group strings (may include range patterns).\n * @returns The updated record of block weights including all blocks from the groups.\n */\nexport function mergeWeightsWithGroups(\n    currentWeights: Record<string, context.WeightControlState>,\n    groups: string[][],\n): Record<string, context.WeightControlState> {\n    const updatedWeights = { ...currentWeights };\n\n    const allBlocks: string[] = [];\n    groups.forEach((cols) => {\n        cols.forEach((group) => {\n            const expandedBlocks = expandRange(group);\n            expandedBlocks.forEach((block) => {\n                if (!allBlocks.includes(block)) {\n                    allBlocks.push(block);\n                }\n            });\n        });\n    });\n\n    allBlocks.forEach((block) => {\n        if (!updatedWeights[block]) {\n            updatedWeights[block] = {\n                initValue: configManager.getWeightControllerConfig(WeightControllerTypes.LBW).default,\n                value: configManager.getWeightControllerConfig(WeightControllerTypes.LBW).default,\n                sliderMin: configManager.getWeightControllerConfig(WeightControllerTypes.LBW).min,\n                sliderMax: configManager.getWeightControllerConfig(WeightControllerTypes.LBW).max,\n            };\n        }\n    });\n\n    return updatedWeights;\n}\n", "import { Fragment, h } from 'preact';\n\nimport * as configManager from '@/shared/manager/config-manager';\nimport { WeightControllerTypes } from '@/shared/types/lora-types';\nimport { disabled } from '@/shared/utils/helper-utils';\n\nimport * as context from '@/components/contexts/weight-helper-context';\n\n/**\n * WeightController component provides UI controls for adjusting weight values.\n * Displays a label, optional checkbox, slider, and number input for a weight parameter.\n * @param label - The identifier for the weight block.\n * @param values - The record of all weight values.\n * @returns The WeightController component.\n */\nexport const WeightController = ({ label, values }: { label: string; values: Record<string, context.WeightControlState> }): h.JSX.Element => {\n    const { state, dispatch } = context.useWeightHelper();\n    const config = configManager.getWeightControllerConfig(label) ?? configManager.getWeightControllerConfig(WeightControllerTypes.LBW);\n\n    /**\n     * Handles the change event for the weight checkbox.\n     * Updates the check state for the weight block.\n     * @param e - The input change event.\n     */\n    const handleChangeWeightCheck = (e: h.JSX.TargetedEvent<HTMLInputElement, Event>) => {\n        const target = e.target as HTMLInputElement;\n        dispatch({\n            type: 'SET_WEIGHT',\n            payload: {\n                block: label,\n                value: state.weightState.weights[label].value,\n                checkState: target.checked,\n            },\n        });\n    };\n\n    /**\n     * Handles the change event for the weight slider.\n     * Updates the value and check state for the weight block.\n     * @param e - The input change event.\n     */\n    const handleChangeWeightSlider = (e: h.JSX.TargetedEvent<HTMLInputElement, Event>) => {\n        const target = e.target as HTMLInputElement;\n        const value = +target.value / 100;\n        let checkState = state.weightState.weights[label].checkState;\n        if (checkState !== undefined) {\n            checkState = true;\n        }\n        dispatch({\n            type: 'SET_WEIGHT',\n            payload: {\n                block: label,\n                value: value,\n                checkState: checkState,\n            },\n        });\n    };\n\n    /**\n     * Handles the change event for the weight number input.\n     * Updates the value and check state for the weight block.\n     * @param e - The input change event.\n     */\n    const handleChangeWeightNumber = (e: h.JSX.TargetedEvent<HTMLInputElement, Event>) => {\n        const target = e.target as HTMLInputElement;\n        const value = +target.value;\n        let checkState = state.weightState.weights[label].checkState;\n        if (checkState !== undefined) {\n            checkState = true;\n        }\n        dispatch({\n            type: 'SET_WEIGHT',\n            payload: {\n                block: label,\n                value: value,\n                checkState: checkState,\n            },\n        });\n    };\n\n    const weightController = values[label];\n    return (\n        <Fragment key={label}>\n            <span>\n                <label>{label}</label>\n                {state.weightState.weights[label].checkState !== undefined && (\n                    <input type=\"checkbox\" checked={state.weightState.weights[label].checkState} onChange={handleChangeWeightCheck} />\n                )}\n            </span>\n            <div className=\"f f-c g-4\">\n                <input\n                    className=\"slider\"\n                    type=\"range\"\n                    value={Math.round(weightController.value * 100)}\n                    min={Math.round(weightController.sliderMin * 100)}\n                    max={Math.round(weightController.sliderMax * 100)}\n                    step={Math.round(config.step * 100)}\n                    disabled={disabled(state, label)}\n                    onChange={handleChangeWeightSlider}\n                />\n                <input\n                    className=\"value\"\n                    type=\"number\"\n                    value={+weightController.value}\n                    step={config.step}\n                    disabled={disabled(state, label)}\n                    onChange={handleChangeWeightNumber}\n                />\n            </div>\n        </Fragment>\n    );\n};\n", "// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { h } from 'preact';\n\nimport { useRef } from 'preact/hooks';\n\nimport * as historyManager from '@/shared/manager/history-manager';\nimport { getPreset } from '@/shared/utils/common-utils';\nimport { getDisplayStyle, getVisibilityStyle } from '@/shared/utils/helper-utils';\nimport { createLoraParamsState } from '@/shared/utils/state-utils';\n\nimport * as context from '@/components/contexts/weight-helper-context';\n\n/**\n * HeaderSection component displays the title bar of the Weight Helper.\n * Provides LoRA name display, lock toggle, and history navigation controls.\n * @param loraName - The name of the LoRA model.\n * @param lock - The current lock status.\n * @returns The HeaderSection component.\n */\nexport const HeaderSection = ({ loraName, lock }: { loraName: string; lock: boolean }) => {\n    const { state, dispatch } = context.useWeightHelper();\n\n    const histories = historyManager.getHistories(state.loraName);\n\n    const isDragging = useRef(false);\n    const offset = useRef({ x: 0, y: 0 });\n\n    /**\n     * Handles the mouse down event for dragging the header.\n     * @param e - The mouse event.\n     */\n    const handleMouseDown = (e: MouseEvent) => {\n        isDragging.current = true;\n        offset.current = {\n            x: e.clientX - state.uiState.pos.left + window.scrollX,\n            y: e.clientY - state.uiState.pos.top + window.scrollY,\n        };\n        document.addEventListener('mousemove', handleMouseMove);\n        document.addEventListener('mouseup', handleMouseUp);\n    };\n\n    /**\n     * Handles the mouse move event for dragging the header.\n     * Updates the position of the header based on mouse movement.\n     * @param e - The mouse event.\n     */\n    const handleMouseMove = (e: MouseEvent) => {\n        if (!isDragging.current) return;\n\n        const x = e.clientX - offset.current.x + window.scrollX;\n        const y = e.clientY - offset.current.y + window.scrollY;\n\n        dispatch({ type: 'SET_POSITION', payload: { top: y, left: x } });\n    };\n\n    /**\n     * Handles the mouse up event to stop dragging the header.\n     * Removes the event listeners for mouse move and mouse up.\n     */\n    const handleMouseUp = () => {\n        isDragging.current = false;\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n    };\n\n    /**\n     * Handles the clear history button click event.\n     * Clears the history of the Weight Helper.\n     */\n    const handleClearHistory = () => {\n        dispatch({ type: 'CLEAR_HISTORY' });\n    };\n\n    /**\n     * Handles the lock toggle button click event.\n     * Toggles the lock status for the current LoRA and loraParams.\n     */\n    const handleToggleLockStatus = () => {\n        dispatch({ type: 'TOGGLE_LOCK_STATUS' });\n    };\n\n    /**\n     * Handles the previous history button click event.\n     * Navigates to the previous history state.\n     */\n    const handlePrevHistory = () => {\n        const newIndex = Math.max(0, state.historyIndex - 1);\n        const history = histories[newIndex];\n        const loraParams = createLoraParamsState(history.loraParams, history.selectedModelType, history.selectedLoraBlockType);\n        const locked = historyManager.isLocked(state.loraName, history.loraParams);\n        const preset = getPreset(history.selectedModelType, history.selectedLoraBlockType, state.lbwPresets, loraParams.weights);\n        dispatch({ type: 'SET_HISTORY', payload: { historyIndex: newIndex, weightState: loraParams, locked: locked, preset: preset } });\n    };\n\n    /**\n     * Handles the next history button click event.\n     * Navigates to the next history state.\n     */\n    const handleNextHistory = () => {\n        const newIndex = Math.min(histories.length - 1, state.historyIndex + 1);\n        const history = histories[newIndex];\n        const loraParams = createLoraParamsState(history.loraParams, history.selectedModelType, history.selectedLoraBlockType);\n        const locked = historyManager.isLocked(state.loraName, history.loraParams);\n        const preset = getPreset(history.selectedModelType, history.selectedLoraBlockType, state.lbwPresets, loraParams.weights);\n        dispatch({ type: 'SET_HISTORY', payload: { historyIndex: newIndex, weightState: loraParams, locked: locked, preset: preset } });\n    };\n\n    return (\n        <header onMouseDown={handleMouseDown}>\n            <span>\n                <span className={`lock ${lock ? 'like' : 'unlike'}`} style={getVisibilityStyle(!state.weightState.xyzMode)} onClick={handleToggleLockStatus}>\n                    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                        <path d=\"M21,10H19V7A7,7,0,0,0,5,7v3H3a1,1,0,0,0-1,1v9a4,4,0,0,0,4,4H18a4,4,0,0,0,4-4V11A1,1,0,0,0,21,10Zm-9,9.5A2.5,2.5,0,1,1,14.5,17,2.5,2.5,0,0,1,12,19.5ZM15,10H9V7a3,3,0,0,1,6,0v3Z\"></path>\n                    </svg>\n                </span>\n                <label className=\"name\">{loraName}</label>\n            </span>\n            <div className=\"history\" style={getDisplayStyle(histories.length > 1)}>\n                <a className=\"icon\" onClick={handleClearHistory}>\n                    clear\n                </a>\n                <div className=\"page\">\n                    <a className=\"icon\" onClick={handlePrevHistory} style={getVisibilityStyle(state.historyIndex > 0)}>\n                        &lt;\n                    </a>\n                    <label className=\"page-label\">{state.historyIndex + 1 + '/' + histories.length}</label>\n                    <a className=\"icon\" onClick={handleNextHistory} style={getVisibilityStyle(state.historyIndex < histories.length - 1)}>\n                        &gt;\n                    </a>\n                </div>\n            </div>\n        </header>\n    );\n};\n", "// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { h } from 'preact';\n\nimport * as configManager from '@/shared/manager/config-manager';\nimport { expandRange } from '@/shared/utils/helper-utils';\nimport { disabled } from '@/shared/utils/helper-utils';\n\nimport * as context from '@/components/contexts/weight-helper-context';\nimport { WeightController } from '@/components/sections/common-section';\n\n/**\n * LbwSection component displays weight controllers for LoRA block weights.\n * Shows groups of blocks based on the current model and block type configuration.\n * @returns The LbwSection component.\n */\nexport const LbwSection = () => {\n    const { state } = context.useWeightHelper();\n    const { blockGroups, weightState: weightState } = state;\n    const { selectedModelType, selectedLoraBlockType } = weightState;\n\n    const maskedBlockSet = new Set(configManager.getMaskedLbwBlocks(selectedModelType, selectedLoraBlockType));\n\n    return (\n        <div class=\"lbw-column\">\n            {blockGroups.map((cols) => (\n                <div className=\"f col g-2\" key={`${selectedModelType}-${selectedLoraBlockType}-${state.usingBlocks}`} style={{ display: 'flex' }}>\n                    {cols.map((group) => (\n                        <div className=\"border p f g-2 col\" key={`${group}-${selectedModelType}-${selectedLoraBlockType}-${state.usingBlocks}`}>\n                            {expandRange(group).map(\n                                (blockLabel) =>\n                                    maskedBlockSet.has(blockLabel) &&\n                                    weightState.weights[blockLabel] && (\n                                        <div class=\"f g-2\" key={`${blockLabel}-${selectedModelType}-${selectedLoraBlockType}-${disabled(state, blockLabel)}`}>\n                                            <WeightController label={blockLabel} values={weightState.weights} />\n                                        </div>\n                                    ),\n                            )}\n                        </div>\n                    ))}\n                </div>\n            ))}\n        </div>\n    );\n};\n", "import { Fragment, h } from 'preact';\n\nimport { SELECTABLE_LORA_BLOCK_TYPES, SELECTABLE_MODEL_TYPES } from '@/shared/constants/common-const';\nimport * as configManager from '@/shared/manager/config-manager';\nimport * as currentState from '@/shared/state/current-state';\nimport { LoraBlockTypes, ModelTypes } from '@/shared/types/lora-types';\nimport { disabled } from '@/shared/utils/helper-utils';\nimport { mergeWeightsWithGroups } from '@/shared/utils/weight-utils';\n\nimport * as context from '@/components/contexts/weight-helper-context';\n\n/**\n * LoraSettingsSection component provides controls for model settings.\n * Allows selection of model type, LoRA block type, presets, and XYZ mode.\n * @returns The LoraSettingsSection component.\n */\nexport const LoraSettingsSection = () => {\n    const { state, dispatch } = context.useWeightHelper();\n\n    /**\n     * Handles the change event for the LoRA block type select box.\n     * Updates the block groups, presets, and weights for the selected block type.\n     * @param e - The select change event.\n     */\n    const handleChangeLoraBlockType = (e: h.JSX.TargetedEvent<HTMLSelectElement, Event>) => {\n        const target = e.target as HTMLSelectElement;\n        const selectedLoraBlockType = target.value as LoraBlockTypes;\n\n        const blockGroups = configManager.getLbwBlockGroups(state.weightState.selectedModelType, selectedLoraBlockType);\n        const lbwPresets = currentState.getLbwPresets(state.weightState.selectedModelType, selectedLoraBlockType);\n        const weights = mergeWeightsWithGroups(state.weightState.weights, blockGroups);\n\n        dispatch({\n            type: 'SET_MODELINFO',\n            payload: {\n                selectedLoraBlockType: selectedLoraBlockType,\n                selectedModelType: state.weightState.selectedModelType,\n                blockGroups: blockGroups,\n                lbwPresets: lbwPresets,\n                weights: weights,\n            },\n        });\n    };\n\n    /**\n     * Handles the change event for the model type select box.\n     * Updates the block groups, presets, and weights for the selected model type.\n     * @param e - The select change event.\n     */\n    const handleChangeModelType = (e: h.JSX.TargetedEvent<HTMLSelectElement, Event>) => {\n        const target = e.target as HTMLSelectElement;\n        const selectedModelType = target.value as ModelTypes;\n\n        const blockGroups = configManager.getLbwBlockGroups(selectedModelType, state.weightState.selectedLoraBlockType);\n        const lbwPresets = currentState.getLbwPresets(selectedModelType, state.weightState.selectedLoraBlockType);\n        const weights = mergeWeightsWithGroups(state.weightState.weights, blockGroups);\n\n        dispatch({\n            type: 'SET_MODELINFO',\n            payload: {\n                selectedModelType: selectedModelType,\n                selectedLoraBlockType: state.weightState.selectedLoraBlockType,\n                blockGroups: blockGroups,\n                lbwPresets: lbwPresets,\n                weights: weights,\n            },\n        });\n    };\n\n    /**\n     * Handles the toggle event for the XYZ mode checkbox.\n     * Dispatches an action to toggle the XYZ mode state.\n     */\n    const handleToggleXyzMode = () => {\n        dispatch({ type: 'TOGGLE_XYZ_MODE' });\n    };\n\n    /**\n     * Handles the change event for the preset select box.\n     * Applies the selected preset weights to the state.\n     * @param e - The select change event.\n     */\n    const handleApplyPresetWeights = (e: h.JSX.TargetedEvent<HTMLSelectElement, Event>) => {\n        const target = e.target as HTMLSelectElement;\n        let preset = target.value as string;\n        if (preset === '') {\n            preset = state.preset;\n            if (preset === '') {\n                return;\n            }\n        }\n        const presetValues = currentState\n            .getLbwPresets(state.weightState.selectedModelType, state.weightState.selectedLoraBlockType)\n            [preset].split(',')\n            .map((v) => +v);\n\n        const weights: Record<string, context.WeightControlState> = {};\n        const maskedLbwBlocks = configManager.getMaskedLbwBlocks(state.weightState.selectedModelType, state.weightState.selectedLoraBlockType);\n        maskedLbwBlocks.forEach((block, i) => {\n            weights[block] = {\n                initValue: state.weightState.weights[block].initValue,\n                value: presetValues[i],\n                sliderMin: Math.min(presetValues[i], state.weightState.weights[block].sliderMin),\n                sliderMax: Math.max(presetValues[i], state.weightState.weights[block].sliderMax),\n            };\n        });\n\n        dispatch({\n            type: 'SET_PRESET',\n            payload: {\n                weights: weights,\n                preset: target.value,\n            },\n        });\n    };\n\n    return (\n        <Fragment>\n            <div className=\"f g-2 f-end\">\n                <select value={state.weightState.selectedModelType} style={{ flexGrow: 1 }} disabled={disabled(state)} onChange={handleChangeModelType}>\n                    {Object.entries(SELECTABLE_MODEL_TYPES).map(([name, modelType]) => (\n                        <option value={modelType}>{name}</option>\n                    ))}\n                </select>\n                <select value={state.weightState.selectedLoraBlockType} style={{ flexGrow: 1 }} disabled={disabled(state)} onChange={handleChangeLoraBlockType}>\n                    {Object.entries(SELECTABLE_LORA_BLOCK_TYPES).map(([name, loraBlockType]) => (\n                        <option value={loraBlockType}>{name}</option>\n                    ))}\n                </select>\n            </div>\n            <div className=\"f g-2 f-end\">\n                <select value={state.preset} style={{ flexGrow: 1 }} disabled={disabled(state)} onChange={handleApplyPresetWeights}>\n                    <option value=\"\"></option>\n                    {Object.keys(state.lbwPresets).map((presetName) => (\n                        <option value={presetName}>{presetName}</option>\n                    ))}\n                </select>\n                <div className=\"p f g-2 f-end\">\n                    <div className=\"f g-2 f-end\">\n                        <input\n                            id=\"wh:xyz\"\n                            value=\"XYZ\"\n                            type=\"checkbox\"\n                            checked={state.weightState.xyzMode}\n                            disabled={disabled(state)}\n                            onChange={handleToggleXyzMode}\n                        />\n                        <label className=\"radio-label\" htmlFor=\"wh:xyz\">\n                            {configManager.getXyzLabel(state.weightState.selectedModelType, state.weightState.selectedLoraBlockType)}\n                        </label>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n", "// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { h } from 'preact';\n\nimport { resetMetadataAbortController } from '@/shared/manager/api-manager';\nimport * as configManager from '@/shared/manager/config-manager';\nimport * as currentState from '@/shared/state/current-state';\nimport { ModelTypes } from '@/shared/types/lora-types';\nimport { fetchMetadata } from '@/shared/utils/api-utils';\nimport { mergeWeightsWithGroups } from '@/shared/utils/weight-utils';\n\nimport * as context from '@/components/contexts/weight-helper-context';\n\n/**\n * MetadataSection component displays model and base information.\n * Provides a button to fetch and analyze detailed metadata for the current LoRA model.\n * @returns The MetadataSection component.\n */\nexport const MetadataSection = () => {\n    const { state, dispatch } = context.useWeightHelper();\n\n    /**\n     * Handles the click event for the analyze full metadata button.\n     * Initiates fetching and loading of full metadata for the current LoRA model.\n     */\n    const handleAnalyzeFull = () => {\n        if (state.uiState.isWaiting) {\n            return;\n        }\n        const metadataAbortController = resetMetadataAbortController();\n\n        dispatch({ type: 'SET_WAITING', payload: true });\n\n        fetchMetadata(state.loraName, true, metadataAbortController.signal)\n            .then((result) => {\n                let selectedModelType = state.weightState.selectedModelType;\n                if (!selectedModelType || selectedModelType === ModelTypes.Unknown) {\n                    selectedModelType = result.modelType ?? ModelTypes.Unknown;\n                }\n                const blockGroups = configManager.getLbwBlockGroups(selectedModelType, state.weightState.selectedLoraBlockType);\n                const weights = mergeWeightsWithGroups(state.weightState.weights, blockGroups);\n                dispatch({\n                    type: 'LOAD_METADATA',\n                    payload: {\n                        algorithm: result.algorithm || 'Unknown',\n                        modelType: result.modelType || 'Unknown',\n                        baseModel: result.baseModel || 'Unknown',\n                        selectedModelType: selectedModelType,\n                        usingBlocks: result.usingBlocks,\n                        blockGroups: blockGroups,\n                        lbwPresets: currentState.getLbwPresets(selectedModelType, state.weightState.selectedLoraBlockType),\n                        weights: weights,\n                    },\n                });\n            })\n            .catch((error) => {\n                if (error.name !== 'AbortError') {\n                    console.error('Error fetching metadata:', error);\n                    dispatch({\n                        type: 'SET_WAITING',\n                        payload: false,\n                    });\n                }\n            });\n    };\n\n    return (\n        <span className=\"metadata\">\n            <span>\n                <span>Model</span>\n                <span>{state.metadataState?.modelType || 'Unknown'}</span>\n            </span>\n            <span>\n                <span>Base</span>\n                <span>{state.metadataState?.baseModel || 'Unknown'}</span>\n            </span>\n            <a className=\"icon mini svg\" onClick={handleAnalyzeFull}>\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 492 492\">\n                    <g>\n                        <path d=\"M484.08,296.216c-5.1-5.128-11.848-7.936-19.032-7.936H330.516c-14.828,0-26.86,12.036-26.86,26.868v22.796c0,7.168,2.784,14.064,7.884,19.16c5.092,5.088,11.82,8.052,18.976,8.052H366.1c-31.544,30.752-74.928,50.08-120.388,50.08c-71.832,0-136.028-45.596-159.744-113.344c-5.392-15.404-19.972-25.784-36.28-25.784c-4.316,0-8.592,0.708-12.7,2.144c-9.692,3.396-17.48,10.352-21.932,19.596c-4.456,9.248-5.04,19.684-1.648,29.368c34.496,98.54,127.692,164.74,232.144,164.74c64.132,0,123.448-23.948,169.572-67.656v25.22c0,14.836,12.384,27.108,27.224,27.108h22.792c14.84,0,26.86-12.272,26.86-27.108V315.24C492,308.056,489.2,301.304,484.08,296.216z\"></path>\n                    </g>\n                    <g>\n                        <path d=\"M478.628,164.78C444.132,66.244,350.916,0.044,246.464,0.044c-64.136,0-123.464,23.952-169.588,67.66v-25.22c0-14.832-12.344-27.112-27.184-27.112H26.896C12.06,15.372,0,27.652,0,42.484V176.76c0,7.18,2.824,13.868,7.944,18.964c5.096,5.128,11.86,7.932,19.044,7.932l-0.08,0.06h134.604c14.84,0,26.832-12.028,26.832-26.86v-22.8c0-14.836-11.992-27.216-26.832-27.216h-35.576c31.544-30.752,74.932-50.076,120.392-50.076c71.832,0,136.024,45.596,159.74,113.348c5.392,15.404,19.968,25.78,36.28,25.78c4.32,0,8.588-0.704,12.7-2.144c9.696-3.396,17.48-10.348,21.932-19.596C481.432,184.9,482.02,174.472,478.628,164.78z\"></path>\n                    </g>\n                </svg>\n            </a>\n        </span>\n    );\n};\n", "import { Fragment, h } from 'preact';\n\nimport { getEditor, getTabId } from '@/shared/state/current-state';\nimport { withoutPromptAssist } from '@/shared/utils/common-utils';\nimport { getDisplayStyle, getVisibilityStyle } from '@/shared/utils/helper-utils';\n\nimport * as context from '@/components/contexts/weight-helper-context';\n\ndeclare function extraNetworksRequestMetadata(e: Event, type: string, modelName: string): void;\ndeclare function extraNetworksEditUserMetadata(e: Event, tabId: string, type: string, modelName: string): void;\n\n/**\n * PreviewSection component displays information about the selected model.\n * Shows preview image, metadata actions, trigger word insertion buttons, and model description.\n * @param preview - The preview state containing model information.\n * @param topComponent - Reference to the top-level component for positioning.\n * @returns The PreviewSection component.\n */\nexport const PreviewSection = ({ preview, topComponent }: { preview: context.PreviewState; topComponent: HTMLDivElement | null }) => {\n    const { state, dispatch } = context.useWeightHelper();\n\n    /**\n     * Handles the click event to show internal metadata for the model.\n     * @param e - The click event.\n     */\n    const handleShowMetadata = (e: h.JSX.TargetedEvent<HTMLDivElement, Event>) => {\n        extraNetworksRequestMetadata(e, 'lora', preview.modelName);\n    };\n\n    /**\n     * Handles the click event to edit user metadata for the model.\n     * @param e - The click event.\n     */\n    const handleEditMetadata = (e: h.JSX.TargetedEvent<HTMLDivElement, Event>) => {\n        extraNetworksEditUserMetadata(e, getTabId(), 'lora', state.previewState.modelName);\n    };\n\n    /**\n     * Handles the click event to open the Civitai model page in a new tab.\n     */\n    const handleOpenCivitai = () => {\n        window.open(`https://civitai.com/models/${preview.modelId}`, '_blank');\n    };\n\n    /**\n     * Handles the click event to show the preview description.\n     */\n    const handleOpenPreviewDescription = () => {\n        dispatch({\n            type: 'SET_PREVIEW_DESCRIPTION_VISIBLE',\n            payload: true,\n        });\n    };\n\n    /**\n     * Handles the click event to close the preview description.\n     */\n    const handleClosePreviewDescription = () => {\n        dispatch({\n            type: 'SET_PREVIEW_DESCRIPTION_VISIBLE',\n            payload: false,\n        });\n    };\n\n    /**\n     * Handles the click event to insert trigger words into the prompt or negative prompt textarea.\n     */\n    const handleInsertTriggerWords = () => {\n        const tabId = getTabId();\n        let promptTextarea = document.querySelector(`#${tabId}_prompt textarea`) as HTMLTextAreaElement;\n        let negativeTextarea = document.querySelector(`#${tabId}_neg_prompt textarea`) as HTMLTextAreaElement | undefined;\n\n        const textarea = getEditor();\n        if (textarea === negativeTextarea) {\n        } else if (textarea !== promptTextarea) {\n            promptTextarea = textarea;\n            negativeTextarea = undefined;\n        }\n        if (!window.opts.weight_helper_using_execCommand) {\n            const insert = () => {\n                const zipped = [\n                    { triggerWords: preview.triggerWords, textarea: promptTextarea },\n                    { triggerWords: preview.negativeTriggerWords, textarea: negativeTextarea },\n                ];\n                for (const { triggerWords, textarea } of zipped) {\n                    if (triggerWords.length > 0 && textarea) {\n                        let words = triggerWords.join(', ');\n                        if (textarea.value) words = ', ' + words;\n                        textarea.value += words;\n                    }\n                }\n            };\n            insert();\n        } else {\n            const insert = () => {\n                const zipped = [\n                    { triggerWords: preview.triggerWords, textarea: promptTextarea },\n                    { triggerWords: preview.negativeTriggerWords, textarea: negativeTextarea },\n                ];\n                for (const { triggerWords, textarea } of zipped) {\n                    if (triggerWords.length > 0 && textarea) {\n                        let words = triggerWords.join(', ');\n                        if (textarea.value) words = ', ' + words;\n                        textarea.focus();\n                        const eolIndex = textarea.value.length;\n                        textarea.setSelectionRange(eolIndex, eolIndex);\n                        document.execCommand('insertText', false, words);\n                    }\n                }\n            };\n            withoutPromptAssist(() => {\n                insert();\n            });\n        }\n        dispatch({\n            type: 'HIDE_TAG_INSERT_BUTTON',\n        });\n    };\n\n    const clientWidth = +(topComponent?.clientWidth || 0);\n    const margin = 6;\n    const pos: Record<string, string> = {};\n    switch (window.opts.weight_helper_preview_position) {\n        case 'Bottom Right':\n            pos.bottom = 0 + 'px';\n            pos.left = clientWidth + margin + 'px';\n            break;\n        case 'Top Left':\n            pos.top = 0 + 'px';\n            pos.right = clientWidth - margin + 'px';\n            break;\n        case 'Bottom Left':\n            pos.right = clientWidth - margin + 'px';\n            pos.bottom = 0 + 'px';\n            break;\n        default:\n            pos.top = 0 + 'px';\n            pos.left = clientWidth + margin + 'px';\n            break;\n    }\n\n    return (\n        <div className=\"preview-pane card\" data-name={preview.modelName} style={{ ...pos }}>\n            <img className=\"preview\" src={preview.thumbUrl} style={{ height: `${window.opts.weight_helper_preview_height}px` }} />\n            <div className=\"action-row button-top\" style={getVisibilityStyle(!preview.isDescriptionVisible)}>\n                {preview.modelName && preview.hasMetadata && typeof extraNetworksRequestMetadata === 'function' && (\n                    <div className=\"metadata-btn card-btn\" title=\"Show internal metadata\" onClick={handleShowMetadata}></div>\n                )}\n                {preview.modelName && typeof extraNetworksEditUserMetadata === 'function' && (\n                    <div className=\"edit-btn card-btn\" title=\"Edit metadata\" onClick={handleEditMetadata}></div>\n                )}\n                {preview.modelId && <div className=\"civitai-btn card-btn\" title=\"Open civitai\" onClick={handleOpenCivitai}></div>}\n                {(preview.triggerWords.length > 0 || preview.negativeTriggerWords.length > 0) && (\n                    <div\n                        className=\"add-trigger-btn card-btn\"\n                        title=\"Add trigger words\"\n                        onClick={handleInsertTriggerWords}\n                        style={getDisplayStyle(preview.isTagInsertButtonVisible)}\n                    ></div>\n                )}\n            </div>\n\n            {preview.description && (\n                <Fragment>\n                    <div className=\"action-row button-bottom\" style={getVisibilityStyle(!preview.isDescriptionVisible)}>\n                        <div className=\"card-btn note-btn\" onClick={handleOpenPreviewDescription}></div>\n                    </div>\n                    <textarea className=\"description\" style={getVisibilityStyle(preview.isDescriptionVisible)}>\n                        {preview.description}\n                    </textarea>\n                    <div\n                        className=\"card-btn description-close-btn\"\n                        style={getVisibilityStyle(preview.isDescriptionVisible)}\n                        onClick={handleClosePreviewDescription}\n                    ></div>\n                </Fragment>\n            )}\n        </div>\n    );\n};\n", "// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { h } from 'preact';\n\nimport { Dispatch, useEffect, useRef } from 'preact/hooks';\n\nimport { CARD_NO_IMAGE_PATH } from '@/shared/constants/common-const';\nimport { resetMetadataAbortController, resetPreviewAbortController } from '@/shared/manager/api-manager';\nimport * as cacheManager from '@/shared/manager/cache-manager';\nimport * as configManager from '@/shared/manager/config-manager';\nimport * as historyManager from '@/shared/manager/history-manager';\nimport * as currentState from '@/shared/state/current-state';\nimport { ModelTypes, WeightControllerTypes } from '@/shared/types/lora-types';\nimport { fetchMetadata, fetchPreviewData } from '@/shared/utils/api-utils';\nimport { getLoraDefineFromEditor, getOutputStrings, syncEditorWithState } from '@/shared/utils/editor-utils';\nimport { disabled, getDisplayStyle } from '@/shared/utils/helper-utils';\nimport { createWeightHelperInitState, createWeightHelperState } from '@/shared/utils/state-utils';\nimport { mergeWeightsWithGroups } from '@/shared/utils/weight-utils';\n\nimport * as context from '@/components/contexts/weight-helper-context';\nimport { WeightController } from '@/components/sections/common-section';\nimport { HeaderSection } from '@/components/sections/header-section';\nimport { LbwSection } from '@/components/sections/lbw-section';\nimport { LoraSettingsSection } from '@/components/sections/lora-settings-section';\nimport { MetadataSection } from '@/components/sections/metadata-section';\nimport { PreviewSection } from '@/components/sections/preview-section';\n\n/**\n * UITemplateContent is the main component of the Weight Helper UI.\n * Renders all control sections and manages global event listeners.\n * @returns The main Weight Helper UI component.\n */\nexport const UITemplateContent = () => {\n    const { state, dispatch } = context.useWeightHelper();\n    const { uiState, weightState, lock, previewState } = state;\n\n    useEffect(() => {\n        const handleClickGenButton = () => {\n            if (state.uiState.isVisible) {\n                closeWeightHelperContext(dispatch);\n                syncEditorWithState(state);\n            }\n        };\n        const genButtons = gradioApp().querySelectorAll(\"button:is([id*='_generate'])\");\n        genButtons.forEach((genBtn) => {\n            genBtn.addEventListener('click', handleClickGenButton, true);\n        });\n\n        const handleRightClickTextarea = (e: MouseEvent) => {\n            if (state.uiState.isVisible) {\n                e.preventDefault();\n                closeWeightHelperContext(dispatch);\n                syncEditorWithState(state);\n                return;\n            }\n            const loraDefine = getLoraDefineFromEditor(e);\n            if (loraDefine) {\n                e.preventDefault();\n                openWeightHelperContext(dispatch, loraDefine);\n            }\n        };\n        const textareas = gradioApp().querySelectorAll(\"*:is([id*='_toprow'] [id*='_prompt'], .prompt) textarea\") as NodeListOf<HTMLTextAreaElement>;\n        textareas.forEach((textarea) => {\n            textarea.addEventListener('contextmenu', handleRightClickTextarea);\n        });\n\n        const handleClickAnyware = (e: MouseEvent) => {\n            if (state.uiState.isVisible) {\n                const contextMenuElement = document.getElementById('weight-helper');\n                if (!contextMenuElement) return;\n                const tabId = currentState.getTabId();\n                if (e) {\n                    const target = e.target as HTMLBodyElement;\n                    if (contextMenuElement.contains(target)) return;\n                    if (target.id === `${tabId}_token_button`) return;\n                    if (target.id === `${tabId}_lora_edit_user_metadata_button`) return;\n                    if (target.className === 'global-popup-close') return;\n                    if (target.id.indexOf('_interrupt') > 0) {\n                        closeWeightHelperContext(dispatch);\n                        return;\n                    }\n                }\n                closeWeightHelperContext(dispatch);\n                syncEditorWithState(state);\n            }\n        };\n        document.addEventListener('click', handleClickAnyware);\n\n        const handleKeyupAnyware = (e: KeyboardEvent) => {\n            if ((e as KeyboardEvent).key === 'Escape') {\n                cancelWeightHelperContext(state, dispatch);\n            }\n        };\n        document.addEventListener('keyup', handleKeyupAnyware);\n\n        return () => {\n            genButtons.forEach((genBtn) => {\n                genBtn.removeEventListener('click', handleClickGenButton, true);\n            });\n            textareas.forEach((textarea) => {\n                textarea.removeEventListener('contextmenu', handleRightClickTextarea);\n            });\n            document.removeEventListener('click', handleClickAnyware);\n            document.removeEventListener('keyup', handleKeyupAnyware);\n        };\n    }, [state]);\n\n    const weightHelperRef = useRef<HTMLDivElement>(null);\n\n    return (\n        <div\n            id=\"weight-helper\"\n            ref={weightHelperRef}\n            className={state.uiState.isWaiting ? 'waiting' : ''}\n            style={{ transform: `scale(${uiState.scale})`, top: `${uiState.pos.top}px`, left: `${uiState.pos.left}px`, ...getDisplayStyle(uiState.isVisible) }}\n        >\n            <HeaderSection loraName={state.loraName} lock={lock} />\n\n            <MetadataSection />\n\n            {weightState.weights[WeightControllerTypes.TENC] && (\n                <section className=\"border p\">\n                    <WeightController label={WeightControllerTypes.TENC} values={weightState.weights} />\n                </section>\n            )}\n            {[WeightControllerTypes.UNET, WeightControllerTypes.START, WeightControllerTypes.STOP].map(\n                (weightType) =>\n                    weightState.weights[weightType] && (\n                        <section\n                            className=\"border p\"\n                            style={getDisplayStyle(\n                                !uiState.isMoreButtonVisible ||\n                                    weightState.weights[weightType].initCheckState ||\n                                    weightState.weights[weightType].initValue !== configManager.getWeightControllerConfig(weightType).default,\n                            )}\n                        >\n                            <WeightController label={weightType} values={weightState.weights} />\n                        </section>\n                    ),\n            )}\n\n            <button\n                style={uiState.isMoreButtonVisible ? {} : { display: 'none' }}\n                disabled={disabled(state)}\n                onClick={() => dispatch({ type: 'HIDE_MORE_BUTTON' })}\n            >\n                show more options\n            </button>\n\n            <section className=\"border p\">\n                <label>LBW</label>\n                <div className=\"f col g-4 w-fill\">\n                    <LoraSettingsSection />\n                    <LbwSection />\n                </div>\n            </section>\n\n            <PreviewSection preview={previewState} topComponent={weightHelperRef.current} />\n        </div>\n    );\n};\n\n/**\n * Opens the Weight Helper context menu at the given location.\n * Initializes state based on the selected LoRA and fetches metadata if needed.\n * @param dispatch - The dispatch function for state updates.\n * @param loraDefine - The LoRA definition and context information.\n */\nfunction openWeightHelperContext(\n    dispatch: Dispatch<context.WeightHelperAction>,\n    loraDefine: {\n        tabId: string;\n        textarea: HTMLTextAreaElement;\n        selectionStart: number;\n        selectionEnd: number;\n        namespace: string;\n        loraName: string;\n        loraParams: string;\n        top: number;\n        left: number;\n    },\n) {\n    const { tabId, textarea, selectionStart, selectionEnd, namespace, loraName, loraParams, top, left } = loraDefine;\n\n    currentState.setTabId(tabId);\n    currentState.setEditor(textarea);\n    currentState.setSelectionStart(selectionStart);\n    currentState.setSelectionEnd(selectionEnd);\n    currentState.setLoraDefineString(textarea.value.substring(selectionStart, selectionEnd));\n\n    currentState.loadStep(tabId);\n    currentState.loadLbwPresets(tabId);\n\n    configManager.getWeightControllerConfig(WeightControllerTypes.START).max = currentState.getStep();\n    configManager.getWeightControllerConfig(WeightControllerTypes.STOP).max = currentState.getStep();\n    configManager.getWeightControllerConfig(WeightControllerTypes.STOP).default = currentState.getStep();\n\n    const rect = document.getElementById('weight-helper')!.getBoundingClientRect();\n    const diffBottom = window.innerHeight - rect.bottom;\n    let arrangedTop = top;\n    if (diffBottom < 0) {\n        if (rect.top < 0) {\n            arrangedTop = window.scrollY;\n        } else {\n            arrangedTop += diffBottom;\n        }\n    }\n    const props = createWeightHelperState(namespace, loraName, loraParams, arrangedTop, left);\n\n    dispatch({ type: 'OPEN_CONTEXT', payload: props });\n\n    if (!props.metadataState) {\n        const metadataAbortController = resetMetadataAbortController();\n        fetchMetadata(loraName, false, metadataAbortController.signal)\n            .then((result) => {\n                let selectedModelType = props.weightState.selectedModelType;\n                if (!selectedModelType || selectedModelType === ModelTypes.Unknown) {\n                    selectedModelType = result.modelType ?? ModelTypes.Unknown;\n                }\n                const selectedLoraBlockType = props.weightState.selectedLoraBlockType;\n                const blockGroups = configManager.getLbwBlockGroups(selectedModelType, selectedLoraBlockType);\n                const weights = mergeWeightsWithGroups(props.weightState.weights, blockGroups);\n\n                const weightState = {\n                    ...props.weightState,\n                    selectedModelType: selectedModelType,\n                    selectedLoraBlockType: selectedLoraBlockType,\n                };\n                const loraParams = getOutputStrings(props.loraName, weightState).loraParams;\n                if (!props.weightState.xyzMode) {\n                    historyManager.addHistory(loraName, {\n                        loraParams: loraParams,\n                        selectedLoraBlockType: selectedLoraBlockType,\n                        selectedModelType: selectedModelType,\n                    });\n                    dispatch({\n                        type: 'SET_HISTORY_INDEX',\n                        payload: historyManager.getHistories(loraName).length - 1,\n                    });\n                }\n\n                dispatch({\n                    type: 'LOAD_METADATA',\n                    payload: {\n                        algorithm: result.algorithm || 'Unknown',\n                        modelType: result.modelType || 'Unknown',\n                        baseModel: result.baseModel || 'Unknown',\n                        selectedModelType: selectedModelType,\n                        usingBlocks: result.usingBlocks,\n                        blockGroups: blockGroups,\n                        lbwPresets: currentState.getLbwPresets(selectedModelType, props.weightState.selectedLoraBlockType),\n                        weights: weights,\n                    },\n                });\n            })\n            .catch((error) => {\n                if (error.name !== 'AbortError') {\n                    console.error('Error fetching metadata:', error);\n                    dispatch({\n                        type: 'SET_WAITING',\n                        payload: false,\n                    });\n                }\n            });\n    }\n\n    if (!props.previewState.modelId) {\n        const previewAbortController = resetPreviewAbortController();\n        fetchPreviewData(loraName, previewAbortController.signal)\n            .then(async (result) => {\n                if (result.thumbUrl !== CARD_NO_IMAGE_PATH) {\n                    result.thumbUrl = result.thumbUrl;\n                }\n                cacheManager.setPreviewCache(loraName, result);\n                dispatch({\n                    type: 'LOAD_PREVIEW_DATA',\n                    payload: result,\n                });\n            })\n            .catch((error) => {\n                if (error.name !== 'AbortError') {\n                    console.error('Error fetching metadata:', error);\n                }\n            });\n    }\n}\n\n/**\n * Closes the Weight Helper context menu.\n * Resets state to initial values and updates visibility.\n * @param dispatch - The dispatch function for state updates.\n */\nfunction closeWeightHelperContext(dispatch: Dispatch<context.WeightHelperAction>): void {\n    const weightHelperState = createWeightHelperInitState();\n    dispatch({ type: 'CLOSE_CONTEXT', payload: weightHelperState });\n}\n\n/**\n * Cancels the Weight Helper context menu operation.\n * Optionally syncs editor state before closing.\n * @param state - The current Weight Helper state.\n * @param dispatch - The dispatch function for state updates.\n */\nfunction cancelWeightHelperContext(state: context.BasicState, dispatch: Dispatch<context.WeightHelperAction>): void {\n    if (!window.opts.weight_helper_using_execCommand) {\n        syncEditorWithState(state, true);\n    }\n    closeWeightHelperContext(dispatch);\n}\n", "import { FunctionComponent, h, render } from 'preact';\n\nimport { createContext } from 'preact/compat';\nimport { Dispatch, useContext, useReducer } from 'preact/hooks';\n\nimport * as historyManager from '@/shared/manager/history-manager';\nimport { LoraBlockTypes, ModelTypes } from '@/shared/types/lora-types';\nimport { getPreset } from '@/shared/utils/common-utils';\nimport { getOutputStrings, updateEditor } from '@/shared/utils/editor-utils';\n\nimport { UITemplateContent } from '@/components/main-component';\n\nexport interface BasicState {\n    loraName: string;\n    metadataState: MetadataState | undefined;\n    srcLoraParams: string;\n    weightState: WeightState;\n    blockGroups: string[][];\n    preset: string;\n    lbwPresets: Record<string, string>;\n    usingBlocks: Set<string> | undefined;\n    uiState: UiState;\n    lock: boolean;\n    historyIndex: number;\n    previewState: PreviewState;\n}\n\nexport interface MetadataState {\n    baseModel: string;\n    modelType: string;\n    algorithm: string;\n}\n\nexport interface WeightState {\n    selectedModelType: ModelTypes;\n    selectedLoraBlockType: LoraBlockTypes;\n    weights: Record<string, WeightControlState>;\n    lbwe: string;\n    xyzMode: boolean;\n}\n\nexport interface WeightControlState {\n    initValue: number;\n    value: number;\n    sliderMin: number;\n    sliderMax: number;\n    initCheckState?: boolean | undefined;\n    checkState?: boolean | undefined;\n}\n\nexport interface UiState {\n    isVisible: boolean;\n    scale: number;\n    isMoreButtonVisible: boolean;\n    isWaiting: boolean;\n    pos: {\n        top: number;\n        right: number;\n        bottom: number;\n        left: number;\n    };\n}\n\nexport interface PreviewState {\n    modelId: string;\n    triggerWords: string[];\n    negativeTriggerWords: string[];\n    modelName: string;\n    thumbUrl: string;\n    hasMetadata: boolean;\n    description: string;\n    isDescriptionVisible: boolean;\n    isTagInsertButtonVisible: boolean;\n}\n\nexport type WeightHelperAction =\n    | { type: 'OPEN_CONTEXT'; payload: BasicState }\n    | { type: 'CLOSE_CONTEXT'; payload: BasicState }\n    | {\n          type: 'SET_POSITION';\n          payload: {\n              top: number;\n              left: number;\n          };\n      }\n    | {\n          type: 'LOAD_METADATA';\n          payload: {\n              algorithm: string;\n              baseModel: string;\n              modelType: string;\n              selectedModelType: ModelTypes;\n              usingBlocks: string[] | null | undefined;\n              blockGroups: string[][];\n              weights: Record<string, WeightControlState>;\n              lbwPresets: Record<string, string>;\n          };\n      }\n    | { type: 'SET_WAITING'; payload: boolean }\n    | {\n          type: 'SET_MODELINFO';\n          payload: {\n              selectedModelType: ModelTypes;\n              selectedLoraBlockType: LoraBlockTypes;\n              blockGroups: string[][];\n              lbwPresets: Record<string, string>;\n              weights: Record<string, WeightControlState>;\n          };\n      }\n    | { type: 'SET_MODEL_TYPE'; payload: ModelTypes }\n    | { type: 'TOGGLE_XYZ_MODE' }\n    | { type: 'SET_PRESET'; payload: { weights: Record<string, WeightControlState>; preset: string } }\n    | { type: 'TOGGLE_LOCK_STATUS' }\n    | {\n          type: 'SET_HISTORY';\n          payload: {\n              historyIndex: number;\n              weightState: {\n                  selectedModelType: ModelTypes;\n                  selectedLoraBlockType: LoraBlockTypes;\n                  weights: Record<string, WeightControlState>;\n                  lbwe: string;\n                  xyzMode: boolean;\n              };\n              preset: string;\n              locked: boolean;\n          };\n      }\n    | { type: 'SET_HISTORY_INDEX'; payload: number }\n    | {\n          type: 'SET_WEIGHT';\n          payload: {\n              block: string;\n              value: number;\n              checkState?: boolean;\n          };\n      }\n    | { type: 'HIDE_MORE_BUTTON' }\n    | { type: 'CLEAR_HISTORY' }\n    | {\n          type: 'LOAD_PREVIEW_DATA';\n          payload: PreviewState;\n      }\n    | {\n          type: 'SET_PREVIEW_DESCRIPTION_VISIBLE';\n          payload: boolean;\n      }\n    | {\n          type: 'HIDE_TAG_INSERT_BUTTON';\n      };\n\nconst WeightHelperContext = createContext<{\n    state: BasicState;\n    dispatch: Dispatch<WeightHelperAction>;\n} | null>(null);\n\nexport const useWeightHelper = () => {\n    const context = useContext(WeightHelperContext);\n    if (!context) {\n        throw new Error('useWeightHelper must be used within a WeightHelperProvider');\n    }\n    return context;\n};\n\nexport const WeightHelperProvider: FunctionComponent<{\n    weightHelperState: BasicState;\n    children: h.JSX.Element | h.JSX.Element[];\n}> = ({ weightHelperState, children }) => {\n    const [state, dispatch] = useReducer(weightHelperReducer, weightHelperState);\n\n    return <WeightHelperContext.Provider value={{ state, dispatch }}>{children}</WeightHelperContext.Provider>;\n};\n\nconst weightHelperReducer = (state: BasicState, action: WeightHelperAction): BasicState => {\n    if (action.type === 'OPEN_CONTEXT') {\n        return action.payload;\n    } else if (action.type === 'CLOSE_CONTEXT') {\n        return action.payload;\n    } else if (action.type === 'SET_POSITION') {\n        return {\n            ...state,\n            uiState: {\n                ...state.uiState,\n                pos: {\n                    ...state.uiState.pos,\n                    top: action.payload.top,\n                    left: action.payload.left,\n                },\n            },\n        };\n    } else if (action.type === 'LOAD_METADATA') {\n        const newState = {\n            ...state,\n            metadataState: {\n                ...state.metadataState,\n                algorithm: action.payload.algorithm || 'Unknown',\n                baseModel: action.payload.baseModel || 'Unknown',\n                modelType: action.payload.modelType || 'Unknown',\n            },\n            weightState: {\n                ...state.weightState,\n                selectedModelType: action.payload.selectedModelType,\n                weights: action.payload.weights,\n            },\n            blockGroups: action.payload.blockGroups,\n            lbwPresets: action.payload.lbwPresets,\n            uiState: {\n                ...state.uiState,\n                isWaiting: false,\n            },\n        };\n        if (action.payload.usingBlocks === null) {\n            newState.usingBlocks = undefined;\n        } else if (action.payload.usingBlocks) {\n            newState.usingBlocks = new Set(action.payload.usingBlocks);\n        }\n        return newState;\n    } else if (action.type === 'SET_WAITING') {\n        return {\n            ...state,\n            uiState: {\n                ...state.uiState,\n                isWaiting: action.payload,\n            },\n        };\n    } else if (action.type === 'SET_MODELINFO') {\n        const newState = {\n            ...state,\n            weightState: {\n                ...state.weightState,\n                selectedLoraBlockType: action.payload.selectedLoraBlockType,\n                selectedModelType: action.payload.selectedModelType,\n                weights: action.payload.weights,\n            },\n            blockGroups: action.payload.blockGroups,\n            lbwPresets: action.payload.lbwPresets,\n        };\n        if (!window.opts.weight_helper_using_execCommand) {\n            updateEditor(getOutputStrings(newState.loraName, newState.weightState).loraDefine);\n        }\n\n        return newState;\n    } else if (action.type === 'TOGGLE_XYZ_MODE') {\n        const newState = {\n            ...state,\n            weightState: {\n                ...state.weightState,\n                xyzMode: !state.weightState.xyzMode,\n            },\n        };\n        if (!window.opts.weight_helper_using_execCommand) {\n            updateEditor(getOutputStrings(newState.loraName, newState.weightState).loraDefine);\n        }\n\n        return newState;\n    } else if (action.type === 'SET_PRESET') {\n        const weightState = {\n            ...state.weightState,\n            weights: {\n                ...state.weightState.weights,\n                ...action.payload.weights,\n            },\n        };\n        const outputStrings = getOutputStrings(state.loraName, weightState);\n        const locked = historyManager.isLocked(state.loraName, outputStrings.loraParams);\n\n        const newState = {\n            ...state,\n            weightState: weightState,\n            preset: action.payload.preset,\n            lock: locked,\n        };\n        if (!window.opts.weight_helper_using_execCommand) {\n            updateEditor(outputStrings.loraDefine);\n        }\n\n        return newState;\n    } else if (action.type === 'TOGGLE_LOCK_STATUS') {\n        const outputLoraParams = getOutputStrings(state.loraName, state.weightState).loraParams;\n        const locked = historyManager.isLocked(state.loraName, outputLoraParams);\n        if (locked) {\n            historyManager.removeLock(state.loraName, outputLoraParams);\n        } else {\n            historyManager.addLock(state.loraName, outputLoraParams);\n        }\n        return {\n            ...state,\n            lock: !locked,\n        };\n    } else if (action.type === 'SET_HISTORY') {\n        const { locked, historyIndex, preset } = action.payload;\n        const { selectedLoraBlockType: selectedLoraBlockType, selectedModelType: selectedModelType, weights, lbwe, xyzMode } = action.payload.weightState;\n        const weightState = {\n            ...state.weightState,\n            weights: {\n                ...state.weightState.weights,\n                ...weights,\n            },\n            selectedLoraBlockType: selectedLoraBlockType,\n            selectedModelType: selectedModelType,\n            lbwe: lbwe,\n            xyzMode: xyzMode,\n        };\n        const newState = {\n            ...state,\n            historyIndex: historyIndex,\n            preset: preset,\n            weightState: weightState,\n            lock: locked,\n        };\n        if (!window.opts.weight_helper_using_execCommand) {\n            updateEditor(getOutputStrings(newState.loraName, newState.weightState).loraDefine);\n        }\n\n        return newState;\n    } else if (action.type === 'SET_HISTORY_INDEX') {\n        return {\n            ...state,\n            historyIndex: action.payload,\n        };\n    } else if (action.type === 'SET_WEIGHT') {\n        const weights = {\n            ...state.weightState.weights,\n            [action.payload.block]: {\n                ...state.weightState.weights[action.payload.block],\n                value: action.payload.value,\n                min: Math.min(action.payload.value, state.weightState.weights[action.payload.block].sliderMin),\n                max: Math.max(action.payload.value, state.weightState.weights[action.payload.block].sliderMax),\n                checkState: action.payload.checkState,\n            },\n        };\n        const weightState = {\n            ...state.weightState,\n            weights,\n        };\n\n        const outputStrings = getOutputStrings(state.loraName, weightState);\n        const locked = historyManager.isLocked(state.loraName, outputStrings.loraParams);\n\n        const newState = {\n            ...state,\n            weightState: weightState,\n            preset: getPreset(state.weightState.selectedModelType, state.weightState.selectedLoraBlockType, state.lbwPresets, weights),\n            lock: locked,\n        };\n        if (!window.opts.weight_helper_using_execCommand) {\n            updateEditor(outputStrings.loraDefine);\n        }\n\n        return newState;\n    } else if (action.type === 'HIDE_MORE_BUTTON') {\n        return {\n            ...state,\n            uiState: {\n                ...state.uiState,\n                isMoreButtonVisible: false,\n            },\n        };\n    } else if (action.type === 'CLEAR_HISTORY') {\n        historyManager.clearHistories(state.loraName);\n        if (!state.weightState.xyzMode) {\n            historyManager.addHistory(state.loraName, { loraParams: getOutputStrings(state.loraName, state.weightState).loraParams, ...state.weightState });\n        }\n        const historyIndex = historyManager.getHistories(state.loraName).length - 1;\n        return {\n            ...state,\n            historyIndex: historyIndex < 0 ? 0 : historyIndex,\n        };\n    } else if (action.type === 'LOAD_PREVIEW_DATA') {\n        return {\n            ...state,\n            previewState: action.payload,\n        };\n    } else if (action.type === 'SET_PREVIEW_DESCRIPTION_VISIBLE') {\n        return {\n            ...state,\n            previewState: {\n                ...state.previewState,\n                isDescriptionVisible: action.payload,\n            },\n        };\n    } else if (action.type === 'HIDE_TAG_INSERT_BUTTON') {\n        return {\n            ...state,\n            previewState: {\n                ...state.previewState,\n                isTagInsertButtonVisible: false,\n            },\n        };\n    } else {\n        return state;\n    }\n};\n\nexport function initialize(weightHelperProps: BasicState): void {\n    render(\n        <WeightHelperProvider weightHelperState={weightHelperProps}>\n            <UITemplateContent />\n        </WeightHelperProvider>,\n        document.getElementById('weight-helper-container')!,\n    );\n}\n", "import * as configManager from '@/shared/manager/config-manager';\nimport * as historyManager from '@/shared/manager/history-manager';\nimport { createWeightHelperInitState } from '@/shared/utils/state-utils';\n\nimport * as context from '@/components/contexts/weight-helper-context';\n\ndeclare function gradioApp(): HTMLElement;\ndeclare function onUiLoaded(callback: VoidFunction): void;\ndeclare function onOptionsChanged(callback: VoidFunction): void;\n\n/**\n * Promise resolver for the initialization process.\n * Used to signal when options have been loaded and initialization can proceed.\n */\nexport let resolveInitialized: ((value: boolean) => void) | null;\n\n/**\n * Promise that resolves when the Weight Helper is ready to initialize.\n * Used to defer initialization until options are loaded.\n */\nconst initializedPromise = new Promise<boolean>((resolve) => {\n    resolveInitialized = resolve;\n});\n\n/**\n * Entry point for the Weight Helper React application.\n * Handles initialization, theme adaptation, and state setup when the UI is loaded or options are changed.\n */\nhistoryManager.loadLocalStorage();\n\nonUiLoaded(() => {\n    if (!gradioApp().querySelector('#lbw_ratiospreset')) {\n        return;\n    }\n    const textColor = getComputedStyle(document.documentElement).getPropertyValue('--body-text-color').trim();\n    const textColorRgb = textColor\n        .slice(1)\n        .match(/.{1,2}/g)!\n        .map((hex) => parseInt(hex, 16));\n    const textColorRgba = [...textColorRgb, 0.3];\n    document.documentElement.style.setProperty('--weight-helper-shadow', `rgba(${textColorRgba.join(',')})`);\n    document.documentElement.style.setProperty('--weight-helper-slider_size', String(window.opts.weight_helper_slider_length));\n\n    initializedPromise.then(() => {\n        const weightHelperContainer = document.createElement('div');\n        weightHelperContainer.id = 'weight-helper-container';\n        gradioApp().appendChild(weightHelperContainer);\n\n        configManager.initialize();\n        context.initialize(createWeightHelperInitState());\n    });\n});\n\nonOptionsChanged(() => {\n    if (resolveInitialized) {\n        resolveInitialized(true);\n        resolveInitialized = null;\n    }\n});\n"],
  "mappings": "mBAMO,IAAMA,EAAiB,CAC1B,KAAM,OACN,QAAS,UACT,QAAS,SACb,EAGaC,EAAa,CACtB,GAAI,KACJ,KAAM,OACN,KAAM,OACN,QAAS,SACb,EAGaC,EAAmB,CAC5B,GAAI,KACJ,KAAM,OACN,MAAO,QACP,KAAM,OACN,KAAM,OACN,IAAK,MACL,KAAM,MACV,EAGaC,EAAwB,CACjC,KAAM,OACN,KAAM,OACN,MAAO,QACP,KAAM,OACN,IAAK,KACT,ECpCA,IAAMC,GAAkB,CACpB,iBAAkB,CACd,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACJ,EACA,kBAAmB,CACf,OACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACJ,CACJ,EAEaC,GAAa,CACtB,CAACC,EAAW,EAAE,EAAGF,GAAgB,iBACjC,CAACE,EAAW,IAAI,EAAGF,GAAgB,iBACnC,CAACE,EAAW,IAAI,EAAGF,GAAgB,kBACnC,CAACE,EAAW,OAAO,EAAG,CAAC,CAC3B,EAEaC,GAAgB,CACzB,CAACD,EAAW,EAAE,EAAG,CACb,CAACE,EAAe,IAAI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EACpG,CAACA,EAAe,OAAO,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG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",
  "names": ["LoraBlockTypes", "ModelTypes", "LoraDefineParams", "WeightControllerTypes", "BASE_MODEL_TYPE", "LBW_BLOCKS", "ModelTypes", "lbwMaskDefine", "LoraBlockTypes", "XYZ_PRESETS", "SELECTABLE_MODEL_TYPES", "SELECTABLE_LORA_BLOCK_TYPES", "CARD_NO_IMAGE_PATH", "WeightControllerConfig", "WeightControllerTypes", "lbwGroupConfig", "ModelTypes", "LoraBlockTypes", "initialize", "optBlockPattern", "modelType", "SELECTABLE_MODEL_TYPES", "loraBlockType", "SELECTABLE_LORA_BLOCK_TYPES", "optBlockPoints", "blockPoints", "v", "match", "e", "k", "getWeightControllerConfig", "type", "getLbwBlocks", "selectedModelType", "LBW_BLOCKS", "getMaskedLbwBlocks", "selectedLoraBlockType", "masks", "getLbwMasks", "_", "i", "lbwMaskDefine", "getLbwBlockGroups", "getXyzLabel", "XYZ_PRESETS", "_historiesStore", "_lockStore", "getHistories", "loraName", "addHistory", "history", "h", "clearHistories", "lockSet", "addLock", "loraParams", "removeLock", "isLocked", "storeLocalStorage", "lockObj", "key", "loadLocalStorage", "histories", "locks", "_metadataCacheStore", "_previewCacheStore", "getMetadataCache", "loraName", "setMetadataCache", "cache", "getPreviewCache", "setPreviewCache", "_tabId", "_editor", "_selectionStart", "_selectionEnd", "_loraDefineString", "_lbwPresetsMap", "_step", "getTabId", "setTabId", "tabId", "getEditor", "setEditor", "getSelectionStart", "setSelectionStart", "selectionStart", "getSelectionEnd", "setSelectionEnd", "selectionEnd", "getLoraDefineString", "setLoraDefineString", "loraDefineString", "getStep", "loadStep", "getLbwPresets", "selectedModelType", "selectedLoraBlockType", "ModelTypes", "LoraBlockTypes", "loadLbwPresets", "lbwPresets", "e", "lbwPresetsMap", "modelType", "loraBlockType", "lbwPreset", "lbwPresetValueKey", "blockLength", "getLbwMasks", "b", "line", "kv", "getPreset", "selectedModelType", "selectedLoraBlockType", "lbwPresets", "weights", "maskedBlockSet", "getMaskedLbwBlocks", "weightValue", "key", "entries", "foundPreset", "value", "withoutPromptAssist", "func", "tacActiveInOrg", "tacEnabled", "pilotOrg", "pilotEnabled", "lower", "str", "getDisplayStyle", "visible", "getVisibilityStyle", "disabled", "state", "blockLabel", "WeightControllerTypes", "expandRange", "patterns", "result", "b", "pattern", "match", "prefix", "start", "end", "startNum", "endNum", "i", "REGEX", "getLoraDefineFromEditor", "textarea", "selectedText", "prompt", "tmpSelectionStart", "lCar", "rCar", "match", "namespace", "loraName", "loraParams", "tabId", "selectionStart", "selectionEnd", "updateEditor", "updatedText", "getEditor", "start", "getSelectionStart", "end", "getSelectionEnd", "setSelectionEnd", "updateEditorWithExecCommand", "withoutPromptAssist", "getOutputStrings", "weightState", "WeightControllerTypes", "refIdx", "idx", "keyType", "weight", "defVal", "getWeightControllerConfig", "val", "lower", "startDefVal", "startVal", "stopDefVal", "stopVal", "selectedModelType", "selectedLoraBlockType", "xyzValue", "updatedTextWithPreset", "ModelTypes", "lbwWeights", "getLbwMasks", "mask", "i", "getLbwBlocks", "block", "lbwDefault", "lbwValues", "lbwPresets", "getLbwPresets", "preset", "value", "syncEditorWithState", "state", "cancel", "outputStrings", "getLoraDefineString", "setMetadataCache", "addHistory", "storeLocalStorage", "createWeightHelperInitState", "LoraBlockTypes", "ModelTypes", "createWeightHelperState", "namespace", "loraName", "loraParams", "top", "left", "selectedModelType", "selectedLoraBlockType", "histories", "getHistories", "latest", "metadataState", "usingBlocks", "metadataCache", "getMetadataCache", "weightState", "createWeightState", "lbwPresets", "getLbwPresets", "outputLoraParams", "getOutputStrings", "isMoreButtonVisible", "keyType", "WeightControllerTypes", "weight", "defVal", "getWeightControllerConfig", "val", "getLbwBlockGroups", "createPreviewState", "getPreset", "isLocked", "modelType", "loraBlockType", "loraParamsProps", "createLoraParamsState", "weights", "lbwe", "xyzMode", "loraParamss", "loraParamsMap", "i", "key", "value", "keyValue", "LoraDefineParams", "loraSdCombination", "SELECTABLE_MODEL_TYPES", "SELECTABLE_LORA_BLOCK_TYPES", "getLbwMasks", "te", "unet", "vStart", "vStop", "lbwVals", "xyzModeFlag", "loraParamKey", "blocks", "loraSd", "b", "refIdx", "enable", "startStop", "useUnet", "lbws", "getLbwBlocks", "lbw", "previewCache", "getPreviewCache", "CARD_NO_IMAGE_PATH", "slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "defer", "depthSort", "CAPTURE_REGEX", "eventClock", "eventProxy", "eventProxyCapture", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "isArray", "Array", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "undefined", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__c", "constructor", "__v", "__i", "__u", "Fragment", "props", "children", "BaseComponent", "context", "this", "getDomSibling", "vnode", "childIndex", "__", "__i", "sibling", "__k", "length", "__e", "type", "updateParentDomPointers", "i", "child", "__c", "base", "enqueueRender", "c", "__d", "rerenderQueue", "push", "process", "__r", "prevDebounce", "options", "debounceRendering", "defer", "component", "newVNode", "oldVNode", "oldDom", "commitQueue", "refQueue", "l", "sort", "depthSort", "shift", "__v", "__P", "assign", "diff", "__n", "namespaceURI", "__u", "commitRoot", "diffChildren", "parentDom", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "namespace", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "result", "oldChildren", "EMPTY_ARR", "newChildrenLength", "constructNewChildrenArray", "EMPTY_OBJ", "ref", "applyRef", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "Array", "constructor", "String", "createVNode", "isArray", "undefined", "__b", "key", "findMatchingIndex", "unmount", "parentVNode", "contains", "insertBefore", "nodeType", "toChildArray", "out", "some", "x", "y", "setStyle", "style", "value", "setProperty", "IS_NON_DIMENSIONAL", "test", "dom", "name", "oldValue", "useCapture", "o", "cssText", "replace", "CAPTURE_REGEX", "toLowerCase", "slice", "_attached", "eventClock", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "createEventProxy", "eventHandler", "_dispatched", "event", "tmp", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "isClassComponent", "provider", "componentContext", "renderHook", "count", "newType", "outer", "prototype", "render", "contextType", "__E", "doRender", "sub", "state", "__h", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "cloneNode", "then", "MODE_HYDRATE", "indexOf", "removeNode", "diffElementNodes", "diffed", "root", "cb", "call", "node", "map", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "localName", "document", "createTextNode", "createElementNS", "is", "__m", "data", "childNodes", "attributes", "__html", "innerHTML", "content", "hasRefUnmount", "current", "skipRemove", "r", "componentWillUnmount", "replaceNode", "documentElement", "createElement", "firstChild", "createContext", "defaultValue", "Context", "props", "subs", "ctx", "this", "getChildContext", "Set", "__c", "componentWillUnmount", "shouldComponentUpdate", "_props", "value", "forEach", "c", "__e", "enqueueRender", "sub", "add", "old", "delete", "call", "children", "i", "__", "Provider", "__l", "Consumer", "contextValue", "contextType", "slice", "EMPTY_ARR", "options", "error", "vnode", "oldVNode", "errorInfo", "component", "ctor", "handled", "constructor", "getDerivedStateFromError", "setState", "__d", "componentDidCatch", "__E", "e", "vnodeId", "isValidElement", "undefined", "BaseComponent", "prototype", "update", "callback", "s", "__s", "state", "assign", "__v", "_sb", "push", "forceUpdate", "__h", "render", "Fragment", "rerenderQueue", "defer", "Promise", "then", "bind", "resolve", "setTimeout", "depthSort", "a", "b", "__b", "process", "__r", "CAPTURE_REGEX", "eventClock", "eventProxy", "createEventProxy", "eventProxyCapture", "currentIndex", "currentComponent", "previousComponent", "prevRaf", "currentHook", "afterPaintEffects", "options", "_options", "oldBeforeDiff", "__b", "oldBeforeRender", "__r", "oldAfterDiff", "diffed", "oldCommit", "__c", "oldBeforeUnmount", "unmount", "oldRoot", "__", "getHookState", "index", "type", "__h", "hooks", "__H", "length", "push", "useReducer", "reducer", "initialState", "init", "hookState", "getHookState", "currentIndex", "_reducer", "__c", "__", "invokeOrReturn", "action", "currentValue", "__N", "nextValue", "setState", "currentComponent", "__f", "updateHookState", "p", "s", "c", "__H", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "props", "forEach", "hookItem", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useEffect", "callback", "args", "state", "options", "__s", "argsChanged", "_pendingArgs", "__h", "push", "useRef", "initialValue", "currentHook", "useMemo", "current", "useMemo", "factory", "args", "state", "getHookState", "currentIndex", "argsChanged", "__H", "__", "__h", "useContext", "context", "provider", "currentComponent", "__c", "state", "getHookState", "currentIndex", "c", "__", "sub", "props", "value", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "__H", "__h", "forEach", "invokeCleanup", "invokeEffect", "e", "options", "__e", "__v", "__b", "vnode", "currentComponent", "oldBeforeDiff", "__", "parentDom", "__k", "__m", "oldRoot", "__r", "oldBeforeRender", "currentIndex", "hooks", "__c", "previousComponent", "hookItem", "__N", "_pendingArgs", "diffed", "oldAfterDiff", "c", "length", "push", "prevRaf", "requestAnimationFrame", "afterNextFrame", "commitQueue", "some", "filter", "cb", "oldCommit", "unmount", "oldBeforeUnmount", "hasErrored", "s", "HAS_RAF", "callback", "raf", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "setTimeout", "hook", "comp", "cleanup", "argsChanged", "oldArgs", "newArgs", "arg", "index", "invokeOrReturn", "f", "assign", "obj", "props", "i", "shallowDiffers", "a", "b", "useLayoutEffect", "PureComponent", "p", "c", "this", "props", "context", "PureComponent", "prototype", "Component", "isPureReactComponent", "shouldComponentUpdate", "props", "state", "shallowDiffers", "this", "oldDiffHook", "options", "__b", "vnode", "type", "__f", "ref", "REACT_FORWARD_SYMBOL", "Symbol", "for", "oldCatchError", "options", "__e", "error", "newVNode", "oldVNode", "errorInfo", "then", "component", "vnode", "__", "__c", "__k", "oldUnmount", "unmount", "detachedClone", "detachedParent", "parentDom", "__H", "forEach", "effect", "assign", "__P", "map", "child", "removeOriginal", "originalParent", "__v", "appendChild", "Suspense", "this", "__u", "_suspenders", "__b", "suspended", "__a", "SuspenseList", "this", "_next", "_map", "options", "unmount", "vnode", "component", "__c", "__R", "__u", "type", "oldUnmount", "Suspense", "prototype", "Component", "promise", "suspendingVNode", "suspendingComponent", "c", "_suspenders", "push", "resolve", "suspended", "__v", "resolved", "onResolved", "onSuspensionComplete", "state", "__a", "suspendedVNode", "__k", "removeOriginal", "__P", "__O", "setState", "__b", "pop", "forceUpdate", "then", "componentWillUnmount", "render", "props", "detachedParent", "document", "createElement", "detachedComponent", "detachedClone", "fallback", "Fragment", "children", "list", "child", "node", "delete", "revealOrder", "size", "length", "SuspenseList", "prototype", "Component", "__a", "child", "list", "this", "delegated", "suspended", "__v", "node", "_map", "get", "unsuspend", "wrappedUnsuspend", "props", "revealOrder", "push", "resolve", "render", "_next", "Map", "children", "toChildArray", "reverse", "i", "length", "set", "componentDidUpdate", "componentDidMount", "_this", "forEach", "REACT_ELEMENT_TYPE", "Symbol", "for", "CAMEL_PROPS", "ON_ANI", "CAMEL_REPLACE", "IS_DOM", "document", "onChangeInputType", "type", "test", "Component", "prototype", "isReactComponent", "forEach", "key", "Object", "defineProperty", "configurable", "get", "this", "set", "v", "writable", "value", "oldEventHook", "options", "event", "empty", "isPropagationStopped", "cancelBubble", "isDefaultPrevented", "defaultPrevented", "e", "persist", "nativeEvent", "currentComponent", "classNameDescriptorNonEnumberable", "enumerable", "class", "oldVNodeHook", "vnode", "type", "props", "normalizedProps", "isNonDashedType", "indexOf", "i", "IS_DOM", "lowerCased", "toLowerCase", "onChangeInputType", "ON_ANI", "test", "CAMEL_PROPS", "replace", "CAMEL_REPLACE", "multiple", "Array", "isArray", "toChildArray", "children", "child", "selected", "defaultValue", "className", "$$typeof", "REACT_ELEMENT_TYPE", "oldBeforeRender", "__r", "__c", "oldDiffed", "diffed", "dom", "__e", "metadataAbortController", "previewAbortController", "resetMetadataAbortController", "metadataAbortController", "resetPreviewAbortController", "previewAbortController", "fetchMetadata", "loraName", "force", "signal", "res", "fetchPreviewData", "mergeWeightsWithGroups", "currentWeights", "groups", "updatedWeights", "allBlocks", "cols", "group", "expandRange", "block", "getWeightControllerConfig", "WeightControllerTypes", "WeightController", "label", "values", "state", "dispatch", "useWeightHelper", "config", "getWeightControllerConfig", "WeightControllerTypes", "handleChangeWeightCheck", "e", "target", "handleChangeWeightSlider", "value", "checkState", "handleChangeWeightNumber", "weightController", "k", "disabled", "HeaderSection", "loraName", "lock", "state", "dispatch", "useWeightHelper", "histories", "getHistories", "isDragging", "A", "offset", "handleMouseDown", "e", "handleMouseMove", "handleMouseUp", "x", "y", "handleClearHistory", "handleToggleLockStatus", "handlePrevHistory", "newIndex", "history", "loraParams", "createLoraParamsState", "locked", "isLocked", "preset", "getPreset", "handleNextHistory", "getVisibilityStyle", "getDisplayStyle", "LbwSection", "state", "useWeightHelper", "blockGroups", "weightState", "selectedModelType", "selectedLoraBlockType", "maskedBlockSet", "getMaskedLbwBlocks", "cols", "group", "expandRange", "blockLabel", "disabled", "WeightController", "LoraSettingsSection", "state", "dispatch", "useWeightHelper", "handleChangeLoraBlockType", "e", "selectedLoraBlockType", "blockGroups", "getLbwBlockGroups", "lbwPresets", "getLbwPresets", "weights", "mergeWeightsWithGroups", "handleChangeModelType", "selectedModelType", "handleToggleXyzMode", "handleApplyPresetWeights", "target", "preset", "presetValues", "v", "getMaskedLbwBlocks", "block", "i", "k", "disabled", "SELECTABLE_MODEL_TYPES", "name", "modelType", "SELECTABLE_LORA_BLOCK_TYPES", "loraBlockType", "presetName", "getXyzLabel", "MetadataSection", "state", "dispatch", "useWeightHelper", "handleAnalyzeFull", "metadataAbortController", "resetMetadataAbortController", "fetchMetadata", "result", "selectedModelType", "ModelTypes", "blockGroups", "getLbwBlockGroups", "weights", "mergeWeightsWithGroups", "getLbwPresets", "error", "PreviewSection", "preview", "topComponent", "state", "dispatch", "useWeightHelper", "handleShowMetadata", "e", "handleEditMetadata", "getTabId", "handleOpenCivitai", "handleOpenPreviewDescription", "handleClosePreviewDescription", "handleInsertTriggerWords", "tabId", "promptTextarea", "negativeTextarea", "textarea", "getEditor", "zipped", "triggerWords", "words", "insert", "eolIndex", "withoutPromptAssist", "clientWidth", "margin", "pos", "getVisibilityStyle", "getDisplayStyle", "k", "UITemplateContent", "state", "dispatch", "useWeightHelper", "uiState", "weightState", "lock", "previewState", "y", "handleClickGenButton", "closeWeightHelperContext", "syncEditorWithState", "genButtons", "genBtn", "handleRightClickTextarea", "e", "loraDefine", "getLoraDefineFromEditor", "openWeightHelperContext", "textareas", "textarea", "handleClickAnyware", "contextMenuElement", "tabId", "getTabId", "target", "handleKeyupAnyware", "cancelWeightHelperContext", "weightHelperRef", "A", "getDisplayStyle", "HeaderSection", "MetadataSection", "WeightControllerTypes", "WeightController", "weightType", "getWeightControllerConfig", "disabled", "LoraSettingsSection", "LbwSection", "PreviewSection", "selectionStart", "selectionEnd", "namespace", "loraName", "loraParams", "top", "left", "setTabId", "setEditor", "setSelectionStart", "setSelectionEnd", "setLoraDefineString", "loadStep", "loadLbwPresets", "getStep", "rect", "diffBottom", "arrangedTop", "props", "createWeightHelperState", "metadataAbortController", "resetMetadataAbortController", "fetchMetadata", "result", "selectedModelType", "ModelTypes", "selectedLoraBlockType", "blockGroups", "getLbwBlockGroups", "weights", "mergeWeightsWithGroups", "getOutputStrings", "addHistory", "getHistories", "getLbwPresets", "error", "previewAbortController", "resetPreviewAbortController", "fetchPreviewData", "CARD_NO_IMAGE_PATH", "setPreviewCache", "weightHelperState", "createWeightHelperInitState", "WeightHelperContext", "K", "useWeightHelper", "context", "x", "WeightHelperProvider", "weightHelperState", "children", "state", "dispatch", "h", "weightHelperReducer", "action", "newState", "updateEditor", "getOutputStrings", "weightState", "outputStrings", "locked", "isLocked", "outputLoraParams", "removeLock", "addLock", "historyIndex", "preset", "selectedLoraBlockType", "selectedModelType", "weights", "lbwe", "xyzMode", "getPreset", "clearHistories", "addHistory", "getHistories", "initialize", "weightHelperProps", "E", "UITemplateContent", "resolveInitialized", "initializedPromise", "resolve", "loadLocalStorage", "textColorRgba", "hex", "weightHelperContainer", "initialize", "createWeightHelperInitState"]
}
